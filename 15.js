webpackJsonp([15],{789:function(n,t,a){"use strict";function s(n){return n&&n.__esModule?n:{default:n}}function e(n){return _.default.createElement(n.tag,(0,o.default)({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function l(n){return _.default.createElement(e,{tag:"section",html:n.html})}function r(n){return _.default.createElement(e,{tag:"style",html:n.style})}var p=a(12),o=s(p),c=a(1),h=s(c),u=a(2),i=s(u),d=a(5),g=s(d),m=a(4),f=s(m),j=a(3),z=s(j),v=a(0),_=s(v),C=a(177),y=function(){var n=function(n){function t(){var n,a,s,e;(0,i.default)(this,t);for(var l=arguments.length,r=Array(l),p=0;p<l;p++)r[p]=arguments[p];return a=s=(0,f.default)(this,(n=t.__proto__||(0,h.default)(t)).call.apply(n,[this].concat(r))),s.state={current:1,totalItem:1e3},s.onChange=function(n){s.setState({current:n})},e=a,(0,f.default)(s,e)}return(0,z.default)(t,n),(0,g.default)(t,[{key:"render",value:function(){return _.default.createElement(C.Pagination,{current:this.state.current,totalItem:this.state.totalItem,onChange:this.onChange,maxPageToShow:12})}}]),t}(v.Component);return _.default.createElement(n,null)}(),b=function(){var n=function(n){function t(){var n,a,s,e;(0,i.default)(this,t);for(var l=arguments.length,r=Array(l),p=0;p<l;p++)r[p]=arguments[p];return a=s=(0,f.default)(this,(n=t.__proto__||(0,h.default)(t)).call.apply(n,[this].concat(r))),s.state={current:1,totalItem:1e3},s.onChange=function(n){s.setState({current:n})},e=a,(0,f.default)(s,e)}return(0,z.default)(t,n),(0,g.default)(t,[{key:"render",value:function(){return _.default.createElement(C.Pagination,{current:this.state.current,totalItem:this.state.totalItem,onChange:this.onChange,pageSize:[20,{value:30,isCurrent:!0}]})}}]),t}(v.Component);return _.default.createElement(n,null)}(),S=function(){var n=function(n){function t(){var n,a,s,e;(0,i.default)(this,t);for(var l=arguments.length,r=Array(l),p=0;p<l;p++)r[p]=arguments[p];return a=s=(0,f.default)(this,(n=t.__proto__||(0,h.default)(t)).call.apply(n,[this].concat(r))),s.state={current:1321,totalItem:1e13,pageSize:10},s.onChange=function(n){s.setState({current:n})},e=a,(0,f.default)(s,e)}return(0,z.default)(t,n),(0,g.default)(t,[{key:"render",value:function(){return _.default.createElement(C.Pagination,{current:this.state.current,totalItem:this.state.totalItem,pageSize:this.state.pageSize,onChange:this.onChange})}}]),t}(v.Component);return _.default.createElement(n,null)}(),x=function(){var n=function(n){function t(){var n,a,s,e;(0,i.default)(this,t);for(var l=arguments.length,r=Array(l),p=0;p<l;p++)r[p]=arguments[p];return a=s=(0,f.default)(this,(n=t.__proto__||(0,h.default)(t)).call.apply(n,[this].concat(r))),s.state={current:1,pageSize:10,totalItem:1e3,max:100},s.onChange=function(n){s.setState({current:n})},s.onTotalChange=function(n){var t=n.target.value.trim(),a=void 0;a=/^\d+$/.test(t)?+t:0,s.setState({totalItem:a})},s.onPageSizeChange=function(n){var t=n.target.value.trim(),a=void 0;a=/^\d+$/.test(t)?+t:0,s.setState({pageSize:a})},s.onCurrentChange=function(n){var t=n.target.value.trim(),a=void 0;a=/^\d+$/.test(t)?+t:0,s.setState({current:a})},s.onMaxChange=function(n){var t=n.target.value.trim(),a=void 0;a=/^\d+$/.test(t)?+t:0,s.setState({max:a})},e=a,(0,f.default)(s,e)}return(0,z.default)(t,n),(0,g.default)(t,[{key:"render",value:function(){return _.default.createElement("div",null,_.default.createElement("form",{className:"zent-form zent-form--horizontal"},_.default.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},_.default.createElement("label",{className:"zent-form__control-label"},"totalItem: "),_.default.createElement(C.Input,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.totalItem,onChange:this.onTotalChange})),_.default.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},_.default.createElement("label",{className:"zent-form__control-label"},"pageSize:"),_.default.createElement(C.Input,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.pageSize,onChange:this.onPageSizeChange})),_.default.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},_.default.createElement("label",{className:"zent-form__control-label"},"current:"),_.default.createElement(C.Input,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.current,onChange:this.onCurrentChange})),_.default.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},_.default.createElement("label",{className:"zent-form__control-label"},"maxPageToShow:"),_.default.createElement(C.Input,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.max,onChange:this.onMaxChange}))),_.default.createElement(C.Pagination,{current:this.state.current,totalItem:this.state.totalItem,pageSize:this.state.pageSize,maxPageToShow:this.state.max,onChange:this.onChange}))}}]),t}(v.Component);return _.default.createElement(n,null)}(),I=function(n){function t(){var n,a,s,e;(0,i.default)(this,t);for(var l=arguments.length,r=Array(l),p=0;p<l;p++)r[p]=arguments[p];return a=s=(0,f.default)(this,(n=t.__proto__||(0,h.default)(t)).call.apply(n,[this].concat(r))),s.state={showCode:!0},s.toggle=function(){s.setState({showCode:!s.state.showCode})},e=a,(0,f.default)(s,e)}return(0,z.default)(t,n),(0,g.default)(t,[{key:"render",value:function(){var n=this.state.showCode,t=this.props,a=t.title,s=t.src,l=t.demo;return _.default.createElement("div",{className:"zandoc-react-demo"},_.default.createElement("div",{className:"zandoc-react-demo__preview"},l),_.default.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},_.default.createElement("i",{className:"zenticon zenticon-right zandoc-react-demo__toggle "+(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")}),_.default.createElement(e,{tag:"div",attributes:{className:"zandoc-react-demo__title"},html:a})),n&&_.default.createElement(e,{tag:"pre",html:s,attributes:{className:"zandoc-react-demo__code"}}))}}]),t}(v.Component);n.exports=function(n){function t(){return(0,i.default)(this,t),(0,f.default)(this,(t.__proto__||(0,h.default)(t)).apply(this,arguments))}return(0,z.default)(t,n),(0,g.default)(t,[{key:"render",value:function(){return _.default.createElement("div",{className:"zandoc-react-container "},_.default.createElement(r,{style:".zent-pager-control-group {\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n}\n.zent-pager-control-group .zent-pager-input {\n\tmargin-left: 10px;\n\twidth: 200px;\n}"}),_.default.createElement(l,{html:'<h2 id="pagination -fen-ye"><a href="#pagination%20-fen-ye">¶</a>Pagination 分页</h2>\n<p>分页组件</p>\n<h3 id="shi-yong-zhi-nan"><a href="#shi-yong-zhi-nan">¶</a>使用指南</h3>\n<ul>\n<li>展示条目的总数量必须已知</li>\n</ul>\n<h3 id="dai-ma-yan-shi"><a href="#dai-ma-yan-shi">¶</a>代码演示</h3>'}),_.default.createElement(I,{title:"<p>基础用法</p>",src:'<span class="hljs-keyword">import</span> { Pagination } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Basic</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">totalItem</span>: <span class="hljs-number">1000</span>\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Pagination</span>\n        <span class="hljs-attr">current</span>=<span class="hljs-string">{this.state.current}</span>\n        <span class="hljs-attr">totalItem</span>=<span class="hljs-string">{this.state.totalItem}</span>\n        <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span>\n        <span class="hljs-attr">maxPageToShow</span>=<span class="hljs-string">{12}</span>\n      /&gt;</span>\n    );\n  }\n\n  onChange = (page) =&gt; {\n    this.setState({\n      current: page\n    });\n  };\n}\n\nReactDOM.render(\n  <span class="hljs-tag">&lt;<span class="hljs-name">Basic</span> /&gt;</span>\n  , mountNode\n);</span>',demo:y}),_.default.createElement(I,{title:"<p>动态 PageSize</p>",src:'<span class="hljs-keyword">import</span> { Pagination } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dynamic</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">totalItem</span>: <span class="hljs-number">1000</span>\n  };\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Pagination</span>\n        <span class="hljs-attr">current</span>=<span class="hljs-string">{this.state.current}</span>\n        <span class="hljs-attr">totalItem</span>=<span class="hljs-string">{this.state.totalItem}</span>\n        <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span>\n        <span class="hljs-attr">pageSize</span>=<span class="hljs-string">{[20,</span> { <span class="hljs-attr">value:</span> <span class="hljs-attr">30</span>, <span class="hljs-attr">isCurrent:</span> <span class="hljs-attr">true</span> }]}\n      /&gt;</span>\n    );\n  }\n\n  onChange = (page) =&gt; {\n    this.setState({\n      current: page\n    });\n  }\n}\n\nReactDOM.render(\n  <span class="hljs-tag">&lt;<span class="hljs-name">Dynamic</span> /&gt;</span>\n  , mountNode\n);</span>',demo:b}),_.default.createElement(I,{title:"<p>海量页数</p>",src:'<span class="hljs-keyword">import</span> { Pagination } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HugeTotal</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">current</span>: <span class="hljs-number">1321</span>,\n    <span class="hljs-attr">totalItem</span>: <span class="hljs-number">10000000000000</span>,\n    <span class="hljs-attr">pageSize</span>: <span class="hljs-number">10</span>\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Pagination</span>\n        <span class="hljs-attr">current</span>=<span class="hljs-string">{this.state.current}</span>\n        <span class="hljs-attr">totalItem</span>=<span class="hljs-string">{this.state.totalItem}</span>\n        <span class="hljs-attr">pageSize</span>=<span class="hljs-string">{this.state.pageSize}</span>\n        <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span>\n      /&gt;</span>\n    );\n  }\n\n  onChange = (page) =&gt; {\n    this.setState({\n      current: page\n    });\n  }\n}\n\nReactDOM.render(\n  <span class="hljs-tag">&lt;<span class="hljs-name">HugeTotal</span> /&gt;</span>\n  , mountNode\n);</span>',demo:S}),_.default.createElement(I,{title:"<p>动态自定义组件 props</p>",src:'<span class="hljs-keyword">import</span> { Pagination, Input } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Custom</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">pageSize</span>: <span class="hljs-number">10</span>,\n    <span class="hljs-attr">totalItem</span>: <span class="hljs-number">1000</span>,\n    <span class="hljs-attr">max</span>: <span class="hljs-number">100</span>\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;div&gt;\n        &lt;form className="zent-form zent-form--horizontal"&gt;\n          &lt;div className="zent-form__control-group zent-pager-control-group"&gt;\n            &lt;label className="zent-form__control-label"&gt;totalItem: &lt;/label&gt;\n            &lt;Input\n              className="zent-pager-input"\n              type="text"\n              placeholder="数字"\n              value={this.state.totalItem}\n              onChange={this.onTotalChange} \n            /&gt;\n          &lt;/div&gt;\n          &lt;div className="zent-form__control-group zent-pager-control-group"&gt;\n            &lt;label className="zent-form__control-label"&gt;pageSize:&lt;/label&gt;\n            &lt;Input\n              className="zent-pager-input"\n              type="text"\n              placeholder="数字"\n              value={this.state.pageSize}\n              onChange={this.onPageSizeChange}\n            /&gt;\n          &lt;/div&gt;\n          &lt;div className="zent-form__control-group zent-pager-control-group"&gt;\n            &lt;label className="zent-form__control-label"&gt;current:&lt;/label&gt;\n            &lt;Input\n              className="zent-pager-input"\n              type="text"\n              placeholder="数字"\n              value={this.state.current}\n              onChange={this.onCurrentChange}\n            /&gt;\n          &lt;/div&gt;\n          &lt;div className="zent-form__control-group zent-pager-control-group"&gt;\n            &lt;label className="zent-form__control-label"&gt;maxPageToShow:&lt;/label&gt;\n            &lt;Input\n              className="zent-pager-input"\n              type="text"\n              placeholder="数字"\n              value={this.state.max}\n              onChange={this.onMaxChange}\n            /&gt;\n          &lt;/div&gt;\n        &lt;/form&gt;\n        &lt;Pagination\n          current={this.state.current}\n          totalItem={this.state.totalItem}\n          pageSize={this.state.pageSize}\n          maxPageToShow={this.state.max}\n          onChange={this.onChange}\n        /&gt;\n      &lt;/div&gt;\n    );\n  }\n\n  onChange = (page) =&gt; {\n    this.setState({\n      current: page\n    });\n  };\n\n  onTotalChange = (e) =&gt; {\n    let str = e.target.value.trim();\n    let value;\n\n    if (/^\\d+$/.test(str)) {\n      value = +str;\n    } else {\n      value = 0;\n    }\n\n    this.setState({\n      totalItem: value\n    });\n  };\n\n  onPageSizeChange = (e) =&gt; {\n    let str = e.target.value.trim();\n    let value;\n\n    if (/^\\d+$/.test(str)) {\n      value = +str;\n    } else {\n      value = 0;\n    }\n\n    this.setState({\n      pageSize: value\n    });\n  };\n\n  onCurrentChange = (e) =&gt; {\n    let str = e.target.value.trim();\n    let value;\n\n    if (/^\\d+$/.test(str)) {\n      value = +str;\n    } else {\n      value = 0;\n    }\n\n    this.setState({\n      current: value\n    });\n  }\n\n  onMaxChange = (e) =&gt; {\n    let str = e.target.value.trim();\n    let value;\n\n    if (/^\\d+$/.test(str)) {\n      value = +str;\n    } else {\n      value = 0;\n    }\n\n    this.setState({\n      max: value\n    });\n  }\n}\n\nReactDOM.render(\n  &lt;Custom /&gt;\n  , mountNode\n);',demo:x}),_.default.createElement(l,{html:'<h3 id="api"><a href="#api">¶</a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>current</td>\n<td>当前页数</td>\n<td>number</td>\n<td><code>1</code></td>\n<td>是</td>\n</tr>\n<tr>\n<td>totalItem</td>\n<td>总个数</td>\n<td>number</td>\n<td></td>\n<td>是</td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>每页个数</td>\n<td>number, array</td>\n<td><code>10</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>maxPageToShow</td>\n<td>最大可显示页数</td>\n<td>number</td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>翻页回调</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义额外类名</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>自定义前缀</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h4 id="guan-yu- pagesize -shu-xing"><a href="#guan-yu-%20pagesize%20-shu-xing">¶</a>关于 <code>pageSize</code> 属性</h4>\n<p>pageSize 属性支持3种格式：</p>\n<ul>\n<li>\n<p>number: <code>30</code></p>\n</li>\n<li>\n<p>arrayOf(number): <code>[10,20,30]</code></p>\n</li>\n</ul>\n<p>初始值为 10</p>\n<ul>\n<li><code>[10, 20, { value: 30, isCurrent: true }]</code></li>\n</ul>\n<p>初始值为 30</p>\n<h3 id="zu-jian-yuan-li"><a href="#zu-jian-yuan-li">¶</a>组件原理</h3>\n<ul>\n<li>组件结构上分为 core-pagination 和 zent-pagination</li>\n</ul>\n<p>前者是核心的分页组件, 只提供分页功能, 后者是基于前组件的扩展, 模拟 www 的交互</p>\n<ul>\n<li>组件内置独立的 parser 模块作为数据的中台, 将输入的条目信息统一为 <code>renderData</code>.</li>\n</ul>\n<h3 id="parser -de-shu-ru-yu-shu-chu"><a href="#parser%20-de-shu-ru-yu-shu-chu">¶</a>parser 的输入与输出</h3>\n<h4 id="shu-ru"><a href="#shu-ru">¶</a>输入</h4>\n<pre><code class="hljs">{ <span class="hljs-attribute">total</span>: <span class="hljs-number">20</span>, current: <span class="hljs-number">4</span> }\n</code></pre>\n<h4 id="shu-chu"><a href="#shu-chu">¶</a>输出</h4>\n<pre><code class="hljs javascript">[{\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'上一页\'</span>,\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">3</span>\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'1\'</span>,\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">1</span>\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'...\'</span>,\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'3\'</span>,\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">3</span>,\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'4\'</span>,\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">4</span>,\n  <span class="hljs-string">\'current\'</span>: <span class="hljs-literal">true</span>,\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'5\'</span>,\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">5</span>\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'...\'</span>,\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">6</span>\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'20\'</span>\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">20</span>\n}, {\n  <span class="hljs-string">\'content\'</span>: <span class="hljs-string">\'下一页\'</span>\n  <span class="hljs-string">\'target\'</span>: <span class="hljs-number">5</span>\n}];\n</code></pre>'}))}}]),t}(v.Component)}});