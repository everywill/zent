webpackJsonp([7],{799:function(s,a,n){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}function l(s){return v.default.createElement(s.tag,(0,d.default)({},s.attributes,{dangerouslySetInnerHTML:{__html:s.html}}))}function e(s){return v.default.createElement(l,{tag:"section",html:s.html})}function p(s){return v.default.createElement(l,{tag:"style",html:s.style})}var c=n(12),d=t(c),h=n(1),r=t(h),i=n(2),j=t(i),o=n(5),u=t(o),g=n(4),m=t(g),b=n(3),f=t(b),T=n(0),v=t(T),y=n(178),k=function(){var s=y.Tabs.TabPanel,a=function(a){function n(){var s,a,t,l;(0,j.default)(this,n);for(var e=arguments.length,p=Array(e),c=0;c<e;c++)p[c]=arguments[c];return a=t=(0,m.default)(this,(s=n.__proto__||(0,r.default)(n)).call.apply(s,[this].concat(p))),t.state={activeId:"2"},t.onTabChange=function(s){t.setState({activeId:s})},l=a,(0,m.default)(t,l)}return(0,f.default)(n,a),(0,u.default)(n,[{key:"render",value:function(){return v.default.createElement(y.Tabs,{activeId:this.state.activeId,onTabChange:this.onTabChange},v.default.createElement(s,{tab:v.default.createElement("span",null,"选项一"),id:"1",disabled:!0},v.default.createElement("div",null,"选项一的内容")),v.default.createElement(s,{tab:"选项二",id:"2"},v.default.createElement("div",null,"选项二的内容")),v.default.createElement(s,{tab:"选项三",id:"3"},v.default.createElement("div",null,"选项三的内容")))}}]),n}(v.default.Component);return v.default.createElement(a,null)}(),w=function(){var s=y.Tabs.TabPanel,a=function(a){function n(){var s,a,t,l;(0,j.default)(this,n);for(var e=arguments.length,p=Array(e),c=0;c<e;c++)p[c]=arguments[c];return a=t=(0,m.default)(this,(s=n.__proto__||(0,r.default)(n)).call.apply(s,[this].concat(p))),t.state={activeId:"2"},t.onTabChange=function(s){t.setState({activeId:s})},l=a,(0,m.default)(t,l)}return(0,f.default)(n,a),(0,u.default)(n,[{key:"render",value:function(){return v.default.createElement(y.Tabs,{type:"slider",activeId:this.state.activeId,onTabChange:this.onTabChange},v.default.createElement(s,{tab:v.default.createElement("span",null,"选项一"),id:"1",disabled:!0},v.default.createElement("div",null,"选项一的内容")),v.default.createElement(s,{tab:"选项二",id:"2"},v.default.createElement("div",null,"选项二的内容")),v.default.createElement(s,{tab:"选项三",id:"3"},v.default.createElement("div",null,"选项三的内容")))}}]),n}(v.default.Component);return v.default.createElement(a,null)}(),E=function(){var s=y.Tabs.TabPanel,a=function(a){function n(){var s,a,t,l;(0,j.default)(this,n);for(var e=arguments.length,p=Array(e),c=0;c<e;c++)p[c]=arguments[c];return a=t=(0,m.default)(this,(s=n.__proto__||(0,r.default)(n)).call.apply(s,[this].concat(p))),t.state={activeId:"2"},t.onTabChange=function(s){t.setState({activeId:s})},l=a,(0,m.default)(t,l)}return(0,f.default)(n,a),(0,u.default)(n,[{key:"render",value:function(){return v.default.createElement(y.Tabs,{activeId:this.state.activeId,onTabChange:this.onTabChange,type:"card"},v.default.createElement(s,{tab:v.default.createElement("span",null,"选项一"),id:"1",disabled:!0},v.default.createElement("div",null,"选项一的内容")),v.default.createElement(s,{tab:"选项二",id:"2"},v.default.createElement("div",null,"选项二的内容")),v.default.createElement(s,{tab:"选项三",id:"3"},v.default.createElement("div",null,"选项三的内容")))}}]),n}(v.default.Component);return v.default.createElement(a,null)}(),_=function(){var s=y.Tabs.TabPanel,a=4,n=function(n){function t(){var s,n,l,e;(0,j.default)(this,t);for(var p=arguments.length,c=Array(p),d=0;d<p;d++)c[d]=arguments[d];return n=l=(0,m.default)(this,(s=t.__proto__||(0,r.default)(t)).call.apply(s,[this].concat(c))),l.state={activeId:"2",panels:[{tab:v.default.createElement("span",null,"选项一"),id:"1",disabled:!0,content:"选项二"},{tab:v.default.createElement("span",null,"空间选项二"),id:"2",content:v.default.createElement("div",null,"选项一的内容")}]},l.onTabAdd=function(){var s=l.state.panels;s.push({tab:"选项"+a,id:""+a++,content:Date.now()}),l.setState({panels:s})},l.onTabDel=function(s){var a=l.state.panels,n=-1;a.some(function(a,t){return a.id===s&&(n=t,!0)}),n>-1&&(a.splice(n,1),l.setState({panels:a}))},l.onTabChange=function(s){l.setState({activeId:s})},e=n,(0,m.default)(l,e)}return(0,f.default)(t,n),(0,u.default)(t,[{key:"renderPanels",value:function(){return this.state.panels.map(function(a){return v.default.createElement(s,(0,d.default)({},a,{key:a.id}),a.content)})}},{key:"render",value:function(){return v.default.createElement(y.Tabs,{candel:!0,canadd:!0,activeId:this.state.activeId,onTabChange:this.onTabChange.bind(this),onTabDel:this.onTabDel.bind(this),onTabAdd:this.onTabAdd.bind(this)},this.renderPanels())}}]),t}(v.default.Component);return v.default.createElement(n,null)}(),C=function(){var s=function(s){function a(s){(0,j.default)(this,a);var n=(0,m.default)(this,(a.__proto__||(0,r.default)(a)).call(this,s));return n.state={activeId:"2",tabs:[{title:"选项一",key:"1",disabled:!0},{title:"选项二",key:"2"},{title:"选项三",key:"3"}]},n}return(0,f.default)(a,s),(0,u.default)(a,[{key:"onTabChange",value:function(s){this.setState({activeId:s})}},{key:"render",value:function(){return v.default.createElement("div",null,v.default.createElement("div",{style:{marginTop:"10px"}},v.default.createElement(y.Tabs,{activeId:this.state.activeId,onTabChange:this.onTabChange.bind(this),tabs:this.state.tabs}),v.default.createElement("h1",null,this.state.activeId)))}}]),a}(T.Component);return v.default.createElement(s,null)}(),I=function(s){function a(){var s,n,t,l;(0,j.default)(this,a);for(var e=arguments.length,p=Array(e),c=0;c<e;c++)p[c]=arguments[c];return n=t=(0,m.default)(this,(s=a.__proto__||(0,r.default)(a)).call.apply(s,[this].concat(p))),t.state={showCode:!0},t.toggle=function(){t.setState({showCode:!t.state.showCode})},l=n,(0,m.default)(t,l)}return(0,f.default)(a,s),(0,u.default)(a,[{key:"render",value:function(){var s=this.state.showCode,a=this.props,n=a.title,t=a.src,e=a.demo;return v.default.createElement("div",{className:"zandoc-react-demo"},v.default.createElement("div",{className:"zandoc-react-demo__preview"},e),v.default.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},v.default.createElement("i",{className:"zenticon zenticon-right zandoc-react-demo__toggle "+(s?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")}),v.default.createElement(l,{tag:"div",attributes:{className:"zandoc-react-demo__title"},html:n})),s&&v.default.createElement(l,{tag:"pre",html:t,attributes:{className:"zandoc-react-demo__code"}}))}}]),a}(T.Component);s.exports=function(s){function a(){return(0,j.default)(this,a),(0,m.default)(this,(a.__proto__||(0,r.default)(a)).apply(this,arguments))}return(0,f.default)(a,s),(0,u.default)(a,[{key:"render",value:function(){return v.default.createElement("div",{className:"zandoc-react-container "},v.default.createElement(p,{style:""}),v.default.createElement(e,{html:'<h2 id="zent-tabs -xuan-xiang-qia-zu-jian"><a href="#zent-tabs%20-xuan-xiang-qia-zu-jian">¶</a>zent-tabs 选项卡组件</h2>\n<p>选项卡组件</p>\n<h3 id="dai-ma-yan-shi"><a href="#dai-ma-yan-shi">¶</a>代码演示</h3>'}),v.default.createElement(I,{title:"<p>基础用法</p>",src:'<span class="hljs-keyword">import</span> { Tabs } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n<span class="hljs-keyword">const</span> TabPanel = Tabs.TabPanel;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Simple</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">activeId</span>: <span class="hljs-string">\'2\'</span>\n  }\n\n  onTabChange = <span class="hljs-function">(<span class="hljs-params">id</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">activeId</span>: id\n    });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Tabs</span>\n        <span class="hljs-attr">activeId</span>=<span class="hljs-string">{this.state.activeId}</span>\n        <span class="hljs-attr">onTabChange</span>=<span class="hljs-string">{this.onTabChange}</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">{</span>&lt;<span class="hljs-attr">span</span>&gt;</span>选项一<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>}\n          id="1"\n          disabled\n        &gt;\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项一的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">"选项二"</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项二的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">"选项三"</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项三的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Tabs</span>&gt;</span></span>\n    );\n  }\n};\n\nReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Simple</span> /&gt;</span>, mountNode);</span>',demo:k}),v.default.createElement(I,{title:"<p>基础用法 slider</p>",src:'<span class="hljs-keyword">import</span> { Tabs } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n<span class="hljs-keyword">const</span> TabPanel = Tabs.TabPanel;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Simple</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">activeId</span>: <span class="hljs-string">\'2\'</span>\n  }\n\n  onTabChange = <span class="hljs-function">(<span class="hljs-params">id</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">activeId</span>: id\n    });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Tabs</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">"slider"</span>\n        <span class="hljs-attr">activeId</span>=<span class="hljs-string">{this.state.activeId}</span>\n        <span class="hljs-attr">onTabChange</span>=<span class="hljs-string">{this.onTabChange}</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">{</span>&lt;<span class="hljs-attr">span</span>&gt;</span>选项一<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>}\n          id="1"\n          disabled\n        &gt;\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项一的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">"选项二"</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项二的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">"选项三"</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项三的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Tabs</span>&gt;</span></span>\n    );\n  }\n};\n\nReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Simple</span> /&gt;</span>, mountNode);</span>',demo:w}),v.default.createElement(I,{title:"<p>基础用法 card</p>",src:'<span class="hljs-keyword">import</span> { Tabs } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n<span class="hljs-keyword">const</span> TabPanel = Tabs.TabPanel;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Simple</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">activeId</span>: <span class="hljs-string">\'2\'</span>\n  }\n\n  onTabChange = <span class="hljs-function">(<span class="hljs-params">id</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">activeId</span>: id\n    });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Tabs</span>\n        <span class="hljs-attr">activeId</span>=<span class="hljs-string">{this.state.activeId}</span>\n        <span class="hljs-attr">onTabChange</span>=<span class="hljs-string">{this.onTabChange}</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">"card"</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">{</span>&lt;<span class="hljs-attr">span</span>&gt;</span>选项一<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>}\n          id="1"\n          disabled\n        &gt;\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项一的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">"选项二"</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项二的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span>\n          <span class="hljs-attr">tab</span>=<span class="hljs-string">"选项三"</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项三的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Tabs</span>&gt;</span></span>\n    );\n  }\n};\n\nReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Simple</span> /&gt;</span>, mountNode);</span>',demo:E}),v.default.createElement(I,{title:"<p>加减用法</p>",src:'<span class="hljs-keyword">import</span> { Tabs } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n<span class="hljs-keyword">const</span> TabPanel = Tabs.TabPanel;\n<span class="hljs-keyword">let</span> uniqId = <span class="hljs-number">4</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Simple</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">activeId</span>: <span class="hljs-string">\'2\'</span>,\n    <span class="hljs-attr">panels</span>: [\n      {\n        <span class="hljs-attr">tab</span>: <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>选项一<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>,\n        <span class="hljs-attr">id</span>: <span class="hljs-string">\'1\'</span>,\n        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">content</span>: <span class="hljs-string">\'选项二\'</span>\n      }, {\n        <span class="hljs-attr">tab</span>: <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>空间选项二<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>,\n        <span class="hljs-attr">id</span>: <span class="hljs-string">\'2\'</span>,\n        <span class="hljs-attr">content</span>: <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>选项一的内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n      }\n    ],\n  }\n\n  onTabAdd = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n        <span class="hljs-keyword">let</span> { panels } = <span class="hljs-keyword">this</span>.state;\n      panels.push({\n          <span class="hljs-attr">tab</span>: <span class="hljs-string">`选项<span class="hljs-subst">${uniqId}</span>`</span>,\n          <span class="hljs-attr">id</span>: <span class="hljs-string">`<span class="hljs-subst">${uniqId++}</span>`</span>,\n          <span class="hljs-attr">content</span>: <span class="hljs-built_in">Date</span>.now()\n      });\n      <span class="hljs-keyword">this</span>.setState({\n          panels\n      });\n    }\n\n  onTabDel = <span class="hljs-function">(<span class="hljs-params">(id</span>) =&gt;</span> {\n      <span class="hljs-keyword">let</span> { panels } = <span class="hljs-keyword">this</span>.state;\n      <span class="hljs-keyword">let</span> index = <span class="hljs-number">-1</span>;\n      panels.some(<span class="hljs-function">(<span class="hljs-params">p, i</span>) =&gt;</span> {\n          <span class="hljs-keyword">if</span> (p.id === id) {\n              index = i;\n              <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n          }\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      });\n      <span class="hljs-keyword">if</span> (index &gt; <span class="hljs-number">-1</span>) {\n          panels.splice(index, <span class="hljs-number">1</span>);\n          <span class="hljs-keyword">this</span>.setState({\n              panels\n          });\n      }\n    })\n\n  onTabChange = <span class="hljs-function">(<span class="hljs-params">id</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">activeId</span>: id\n    });\n  }\n\n  renderPanels() {\n    <span class="hljs-keyword">let</span> { panels } = <span class="hljs-keyword">this</span>.state;\n    <span class="hljs-keyword">return</span> panels.map(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> {\n      <span class="hljs-keyword">return</span> (<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">TabPanel</span> {<span class="hljs-attr">...p</span>} <span class="hljs-attr">key</span>=<span class="hljs-string">{p.id}</span>&gt;</span>{p.content}<span class="hljs-tag">&lt;/<span class="hljs-name">TabPanel</span>&gt;</span></span>);\n    });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Tabs</span>\n        <span class="hljs-attr">candel</span>\n        <span class="hljs-attr">canadd</span>\n        <span class="hljs-attr">activeId</span>=<span class="hljs-string">{this.state.activeId}</span>\n        <span class="hljs-attr">onTabChange</span>=<span class="hljs-string">{this.onTabChange.bind(this)}</span>\n        <span class="hljs-attr">onTabDel</span>=<span class="hljs-string">{this.onTabDel.bind(this)}</span>\n        <span class="hljs-attr">onTabAdd</span>=<span class="hljs-string">{this.onTabAdd.bind(this)}</span>\n      &gt;</span>\n        {this.renderPanels()}\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Tabs</span>&gt;</span></span>\n    );\n  }\n};\n\nReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Simple</span> /&gt;</span>, mountNode);</span>',demo:_}),v.default.createElement(I,{title:"<p>不使用TabPanel，只使用Tab展示导航</p>",src:'<span class="hljs-keyword">import</span> { Tabs } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Simple</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span>(props) {\n    <span class="hljs-keyword">super</span>(props);\n\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">activeId</span>: <span class="hljs-string">\'2\'</span>,\n      <span class="hljs-attr">tabs</span>: [{\n        <span class="hljs-attr">title</span>: <span class="hljs-string">\'选项一\'</span>,\n        <span class="hljs-attr">key</span>: <span class="hljs-string">\'1\'</span>,\n        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>\n      }, {\n        <span class="hljs-attr">title</span>: <span class="hljs-string">\'选项二\'</span>,\n        <span class="hljs-attr">key</span>: <span class="hljs-string">\'2\'</span>\n      }, {\n        <span class="hljs-attr">title</span>: <span class="hljs-string">\'选项三\'</span>,\n        <span class="hljs-attr">key</span>: <span class="hljs-string">\'3\'</span>\n      }]\n    };\n  }\n\n  onTabChange(id) {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">activeId</span>: id\n    });\n  }\n  \n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">marginTop:</span> \'<span class="hljs-attr">10px</span>\' }}&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Tabs</span>\n            <span class="hljs-attr">activeId</span>=<span class="hljs-string">{this.state.activeId}</span>\n            <span class="hljs-attr">onTabChange</span>=<span class="hljs-string">{this.onTabChange.bind(this)}</span>\n            <span class="hljs-attr">tabs</span>=<span class="hljs-string">{this.state.tabs}</span> /&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>{this.state.activeId}<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    );\n  }\n}\n\nReactDOM.render(<span class="hljs-tag">&lt;<span class="hljs-name">Simple</span> /&gt;</span>, mountNode);</span>',demo:C}),v.default.createElement(e,{html:'<h3 id="api"><a href="#api">¶</a>API</h3>\n<h4 id="tabs"><a href="#tabs">¶</a>Tabs</h4>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>备选值</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>activeId</td>\n<td>激活的tab-id</td>\n<td>string</td>\n<td></td>\n<td></td>\n<td>是</td>\n</tr>\n<tr>\n<td>type</td>\n<td>tabs组件类型</td>\n<td>string</td>\n<td><code>\'normal\'</code></td>\n<td><code>\'card\'</code>\n, \n<code>\'slider\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>size</td>\n<td>tabs的尺寸类型</td>\n<td>string</td>\n<td><code>\'normal\'</code></td>\n<td><code>\'huge\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>align</td>\n<td>tabs的布局类型</td>\n<td>string</td>\n<td><code>\'left\'</code></td>\n<td><code>\'right\'</code>\n, \n<code>\'center\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>onTabChange</td>\n<td>选中的tab改变时</td>\n<td>func(id)</td>\n<td></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>onTabDel</td>\n<td>关闭tab时</td>\n<td>func(id)</td>\n<td></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>onTabAdd</td>\n<td>点击增加tab时</td>\n<td>func</td>\n<td></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>candel</td>\n<td>是否可删除</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>canadd</td>\n<td>是否可增加tab</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>tabs</td>\n<td>不使用Panel时的标签列表</td>\n<td>Array</td>\n<td><code>null</code></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义额外类名</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td></td>\n<td>否</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>自定义前缀</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n<td></td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>tabs参数类型：</p>\n<pre><code class="hljs ts"><span class="hljs-built_in">Array</span>&#x3C;{\n  key: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span>, <span class="hljs-comment">// 同TabPanel id</span>\n  title: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span>, <span class="hljs-comment">// 同TabPanel tab</span>\n  disabled?: <span class="hljs-built_in">boolean</span> <span class="hljs-comment">// 同TabPanel disabled</span>\n}>\n</code></pre>\n<h4 id="tabpanel"><a href="#tabpanel">¶</a>TabPanel</h4>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tab</td>\n<td>该TabPanel所对应的tab标签的名字</td>\n<td>string</td>\n<td>是</td>\n</tr>\n<tr>\n<td>id</td>\n<td>该TabPanel的id</td>\n<td>string</td>\n<td>是</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>该TabPanel是否被禁用</td>\n<td>bool</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>'}))}}]),a}(T.Component)}});