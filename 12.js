webpackJsonp([12],{791:function(a,s,n){"use strict";function t(a){return a&&a.__esModule?a:{default:a}}function l(a){return y.default.createElement(a.tag,(0,c.default)({},a.attributes,{dangerouslySetInnerHTML:{__html:a.html}}))}function e(a){return y.default.createElement(l,{tag:"section",html:a.html})}function p(a){return y.default.createElement(l,{tag:"style",html:a.style})}var r=n(12),c=t(r),o=n(1),d=t(o),h=n(2),u=t(h),i=n(5),j=t(i),g=n(4),m=t(g),f=n(3),v=t(f),R=n(0),y=t(R),C=n(177),E=function(){var a=C.Radio.Group,s=function(s){function n(){var a,s,t,l;(0,u.default)(this,n);for(var e=arguments.length,p=Array(e),r=0;r<e;r++)p[r]=arguments[r];return s=t=(0,m.default)(this,(a=n.__proto__||(0,d.default)(n)).call.apply(a,[this].concat(p))),t.state={value:"male"},t.onChange=function(a){t.setState({value:a.target.value})},l=s,(0,m.default)(t,l)}return(0,v.default)(n,s),(0,j.default)(n,[{key:"render",value:function(){return y.default.createElement(a,{onChange:this.onChange,value:this.state.value},y.default.createElement(C.Radio,{value:"male"},"男"),y.default.createElement(C.Radio,{value:"female"},"女"))}}]),n}(R.Component);return y.default.createElement(s,null)}(),_=function(){var a=C.Radio.Group,s=function(s){function n(){var a,s,t,l;(0,u.default)(this,n);for(var e=arguments.length,p=Array(e),r=0;r<e;r++)p[r]=arguments[r];return s=t=(0,m.default)(this,(a=n.__proto__||(0,d.default)(n)).call.apply(a,[this].concat(p))),t.state={value:"male"},t.onChange=function(a){t.setState({value:a.target.value})},l=s,(0,m.default)(t,l)}return(0,v.default)(n,s),(0,j.default)(n,[{key:"render",value:function(){return y.default.createElement(a,{onChange:this.onChange,value:this.state.value,disabled:!0},y.default.createElement(C.Radio,{value:"male"},"男"),y.default.createElement(C.Radio,{value:"female"},"女"))}}]),n}(y.default.Component);return y.default.createElement(s,null)}(),k=function(){var a=C.Radio.Group,s=function(s){function n(){var a,s,t,l;(0,u.default)(this,n);for(var e=arguments.length,p=Array(e),r=0;r<e;r++)p[r]=arguments[r];return s=t=(0,m.default)(this,(a=n.__proto__||(0,d.default)(n)).call.apply(a,[this].concat(p))),t.state={value:"apple"},t.onChange=function(a){t.setState({value:a.target.value})},l=s,(0,m.default)(t,l)}return(0,v.default)(n,s),(0,j.default)(n,[{key:"render",value:function(){return y.default.createElement(a,{onChange:this.onChange,value:this.state.value},y.default.createElement(C.Radio,{value:"apple"},"苹果"),y.default.createElement(C.Radio,{value:"pears"},"梨子"),y.default.createElement(C.Radio,{value:"cucumber",disabled:!0},"黄瓜"))}}]),n}(y.default.Component);return y.default.createElement(s,null)}(),w=function(){var a=C.Radio.Group,s=function(s){function n(){var a,s,t,l;(0,u.default)(this,n);for(var e=arguments.length,p=Array(e),r=0;r<e;r++)p[r]=arguments[r];return s=t=(0,m.default)(this,(a=n.__proto__||(0,d.default)(n)).call.apply(a,[this].concat(p))),t.state={value:{foo:1}},t.onChange=function(a){t.setState({value:a.target.value})},l=s,(0,m.default)(t,l)}return(0,v.default)(n,s),(0,j.default)(n,[{key:"isValueEqual",value:function(a,s){return a&&s&&a.foo===s.foo}},{key:"render",value:function(){return y.default.createElement(a,{value:this.state.value,isValueEqual:this.isValueEqual,onChange:this.onChange},y.default.createElement(C.Radio,{value:{foo:1}},"foo 1"),y.default.createElement(C.Radio,{value:{foo:2}},"foo 2"))}}]),n}(y.default.Component);return y.default.createElement(s,null)}(),b=function(a){function s(){var a,n,t,l;(0,u.default)(this,s);for(var e=arguments.length,p=Array(e),r=0;r<e;r++)p[r]=arguments[r];return n=t=(0,m.default)(this,(a=s.__proto__||(0,d.default)(s)).call.apply(a,[this].concat(p))),t.state={showCode:!0},t.toggle=function(){t.setState({showCode:!t.state.showCode})},l=n,(0,m.default)(t,l)}return(0,v.default)(s,a),(0,j.default)(s,[{key:"render",value:function(){var a=this.state.showCode,s=this.props,n=s.title,t=s.src,e=s.demo;return y.default.createElement("div",{className:"zandoc-react-demo"},y.default.createElement("div",{className:"zandoc-react-demo__preview"},e),y.default.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},y.default.createElement("i",{className:"zenticon zenticon-right zandoc-react-demo__toggle "+(a?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")}),y.default.createElement(l,{tag:"div",attributes:{className:"zandoc-react-demo__title"},html:n})),a&&y.default.createElement(l,{tag:"pre",html:t,attributes:{className:"zandoc-react-demo__code"}}))}}]),s}(R.Component);a.exports=function(a){function s(){return(0,u.default)(this,s),(0,m.default)(this,(s.__proto__||(0,d.default)(s)).apply(this,arguments))}return(0,v.default)(s,a),(0,j.default)(s,[{key:"render",value:function(){return y.default.createElement("div",{className:"zandoc-react-container "},y.default.createElement(p,{style:""}),y.default.createElement(e,{html:'<h2 id="checkbox -dan-xuan"><a href="#checkbox%20-dan-xuan">¶</a>Checkbox 单选</h2>\n<p>单选框组件</p>\n<h3 id="shi-yong-zhi-nan"><a href="#shi-yong-zhi-nan">¶</a>使用指南</h3>\n<ul>\n<li><code>RadioGroup</code> 是一个 <strong><a href="">受控组件</a></strong>, 必须要设置 <code>onChange</code> 回调方法在组件外部处理 <code>value</code> 变化.</li>\n</ul>\n<h3 id="dai-ma-yan-shi"><a href="#dai-ma-yan-shi">¶</a>代码演示</h3>'}),y.default.createElement(b,{title:"<p>基本用法</p>",src:'<span class="hljs-keyword">import</span> { Radio } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> RadioGroup = Radio.Group;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n\n  state = {\n    <span class="hljs-attr">value</span>: <span class="hljs-string">\'male\'</span>\n  }\n\n  onChange = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({ <span class="hljs-attr">value</span>: e.target.value });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">RadioGroup</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{this.state.value}</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"male"</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"female"</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">RadioGroup</span>&gt;</span></span>\n    );\n  }\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span>\n  , mountNode\n);</span>',demo:E}),y.default.createElement(b,{title:"<p>不可用，整个<code>RadioGroup</code>都不可用</p>",src:'<span class="hljs-keyword">import</span> { Radio } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>\n\n<span class="hljs-keyword">const</span> RadioGroup = Radio.Group;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n\n  state = {\n    <span class="hljs-attr">value</span>: <span class="hljs-string">\'male\'</span>\n  }\n\n  onChange = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({ <span class="hljs-attr">value</span>: e.target.value });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">RadioGroup</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{this.state.value}</span> <span class="hljs-attr">disabled</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"male"</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"female"</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">RadioGroup</span>&gt;</span></span>\n    );\n  }\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span>\n  , mountNode\n);</span>',demo:_}),y.default.createElement(b,{title:"<p>不可用，部分选项不可用</p>",src:'<span class="hljs-keyword">import</span> { Radio } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>\n\n<span class="hljs-keyword">const</span> RadioGroup = Radio.Group;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n\n  state = {\n    <span class="hljs-attr">value</span>: <span class="hljs-string">\'apple\'</span>\n  }\n\n  onChange = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({ <span class="hljs-attr">value</span>: e.target.value });\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">RadioGroup</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{this.state.value}</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"apple"</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"pears"</span>&gt;</span>梨子<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"cucumber"</span> <span class="hljs-attr">disabled</span>&gt;</span>黄瓜<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">RadioGroup</span>&gt;</span></span>\n    );\n  }\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span>\n  , mountNode\n);</span>',demo:k}),y.default.createElement(b,{title:"<p><code>value</code>可以是任意类型，可以使用<code>isValueEqual</code>来自定义比较函数</p>",src:'<span class="hljs-keyword">import</span> { Radio } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>\n\n<span class="hljs-keyword">const</span> RadioGroup = Radio.Group;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{\n\n  state = {\n    <span class="hljs-attr">value</span>: {\n      <span class="hljs-attr">foo</span>: <span class="hljs-number">1</span>\t\n    }\n  }\n\n  onChange = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({ <span class="hljs-attr">value</span>: e.target.value });\n  }\n\n  isValueEqual(a, b) {\n    <span class="hljs-keyword">return</span> a &amp;&amp; b &amp;&amp; a.foo === b.foo;\t\n  }\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">RadioGroup</span> \n        <span class="hljs-attr">value</span>=<span class="hljs-string">{this.state.value}</span>\n        <span class="hljs-attr">isValueEqual</span>=<span class="hljs-string">{this.isValueEqual}</span>\n        <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.onChange}</span> \n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">foo:</span> <span class="hljs-attr">1</span> }}&gt;</span>foo 1<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">foo:</span> <span class="hljs-attr">2</span> }}&gt;</span>foo 2<span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">RadioGroup</span>&gt;</span></span>\n    );\n  }\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span>\n  , mountNode\n);</span>',demo:w}),y.default.createElement(e,{html:'<h3 id="radiogroup api"><a href="#radiogroup%20api">¶</a>RadioGroup API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>用于设置当前选中的值</td>\n<td>any</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>选项变化时的回调函数</td>\n<td>func(e: event)</td>\n<td></td>\n</tr>\n<tr>\n<td>isValueEqual</td>\n<td>可选参数，判断value值是否相等</td>\n<td>func(a, b)</td>\n<td><code>(a, b) => a === b</code></td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义额外类名</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>自定义前缀</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id="radio api"><a href="#radio%20api">¶</a>Radio API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>根据 value 进行比较，判断是否选中</td>\n<td>any</td>\n<td></td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义额外类名</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>自定义前缀</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n</tr>\n</tbody>\n</table>'}))}}]),s}(R.Component)}});