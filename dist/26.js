webpackJsonp([26],{773:function(s,a,n){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}function e(s){return z.default.createElement(s.tag,(0,y.default)({},s.attributes,{dangerouslySetInnerHTML:{__html:s.html}}))}function l(s){return z.default.createElement(e,{tag:"section",html:s.html})}function r(s){return z.default.createElement(e,{tag:"style",html:s.style})}var p=n(1),c=t(p),d=n(2),o=t(d),h=n(5),m=t(h),i=n(4),g=t(i),u=n(3),j=t(u),f=n(11),y=t(f),A=n(0),z=t(A),E=n(177),w=function(){return z.default.createElement(E.Alert,null,"公告内容。")}(),_=function(){return z.default.createElement(E.Alert,null,z.default.createElement(E.Icon,{type:"error-circle"}),z.default.createElement("span",null,"警告：交易过程中的短信通知，将通过营销中心的“消息推送”功能来发送。"),z.default.createElement("a",{href:"//youzan.com",target:"_blank"},"立即订购"))}(),b=function(){return z.default.createElement("div",{className:"zent-alert-example"},z.default.createElement(E.Alert,{type:"info"},"这个是默认的 info 样式。"),z.default.createElement(E.Alert,{type:"warning"},"这个是 warning 样式。"),z.default.createElement(E.Alert,{type:"danger"},"这个是 danger 样式。"))}(),x=function(){return z.default.createElement("div",{className:"zent-alert-example"},z.default.createElement(E.Alert,null,"这个时正常尺寸的公告。"),z.default.createElement(E.Alert,{size:"large"},"这个是大号的公告。"))}(),k=function(){return z.default.createElement(E.Alert,{type:"warning",rounded:!0},"这个公告是有圆角的。")}(),N=function(){return z.default.createElement(E.Alert,{type:"info",closable:!0},"这个公告可以关闭。")}(),v=function(){return z.default.createElement(E.Alert,{type:"info",closable:!0,onClose:function(){return E.Sweetalert.alert({content:"公告关闭了"})}},"这个公告关闭时有回掉函数。")}(),C=function(s){function a(){var s,n,t,e;(0,o.default)(this,a);for(var l=arguments.length,r=Array(l),p=0;p<l;p++)r[p]=arguments[p];return n=t=(0,g.default)(this,(s=a.__proto__||(0,c.default)(a)).call.apply(s,[this].concat(r))),t.state={showCode:!0},t.toggle=function(){t.setState({showCode:!t.state.showCode})},e=n,(0,g.default)(t,e)}return(0,j.default)(a,s),(0,m.default)(a,[{key:"render",value:function(){var s=this.state.showCode,a=this.props,n=a.title,t=a.src,l=a.demo;return z.default.createElement("div",{className:"zandoc-react-demo"},z.default.createElement("div",{className:"zandoc-react-demo__preview"},l),z.default.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},z.default.createElement("i",{className:"zenticon zenticon-right zandoc-react-demo__toggle "+(s?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")}),z.default.createElement(e,{tag:"div",attributes:{className:"zandoc-react-demo__title"},html:n})),s&&z.default.createElement(e,{tag:"pre",html:t,attributes:{className:"zandoc-react-demo__code"}}))}}]),a}(A.Component);s.exports=function(s){function a(){return(0,o.default)(this,a),(0,g.default)(this,(a.__proto__||(0,c.default)(a)).apply(this,arguments))}return(0,j.default)(a,s),(0,m.default)(a,[{key:"render",value:function(){return z.default.createElement("div",{className:"zandoc-react-container "},z.default.createElement(r,{style:".zent-alert-example {\n    padding-right: 32px;\n}\n\n.zent-alert-example .zent-alert {\n    margin-bottom: 20px;\n}\n\n.zent-alert-example .zent-alert a {\n    color: #3388FF;\n    margin-left: 10px;\n}\n\n.zent-alert-example .zent-alert:last-child {\n    margin-bottom: 0;\n}\n\n.zenticon-error-circle {\n    color: #FF4343;\n\tmargin-right: 5px;\n}"}),z.default.createElement(l,{html:'<h2 id="alert -gong-gao"><a href="#alert%20-gong-gao">¶</a>Alert 公告</h2>\n<p>公告，提供一个醒目的提示信息。</p>\n<h3 id="shi-yong-zhi-nan"><a href="#shi-yong-zhi-nan">¶</a>使用指南</h3>\n<ul>\n<li>内容文字尽可能精简, 减少阅读障碍。</li>\n<li>公告类按钮不要多于两个, 保持逻辑简单。</li>\n</ul>\n<h3 id="dai-ma-yan-shi"><a href="#dai-ma-yan-shi">¶</a>代码演示</h3>'}),z.default.createElement(C,{title:"<p>基础用法</p>",src:'<span class="hljs-keyword">import</span> { Alert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span>&gt;</span>公告内容。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span></span>\n  , mountNode\n);',demo:w}),z.default.createElement(C,{title:"<p>公告内容可以是非字符串</p>",src:'<span class="hljs-keyword">import</span> { Alert, Icon } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"error-circle"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>警告：交易过程中的短信通知，将通过营销中心的“消息推送”功能来发送。<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//youzan.com"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>立即订购<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span>\n  , mountNode\n)</span>',demo:_}),z.default.createElement(C,{title:"<p>三种样式：<code>info</code>, <code>warning</code> 和 <code>danger</code></p>",src:'<span class="hljs-keyword">import</span> { Alert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-alert-example"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"info"</span>&gt;</span>这个是默认的 info 样式。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span>&gt;</span>这个是 warning 样式。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"danger"</span>&gt;</span>这个是 danger 样式。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n  , mountNode\n);',demo:b}),z.default.createElement(C,{title:"<p>公告有两种大小</p>",src:'<span class="hljs-keyword">import</span> { Alert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-alert-example"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span>&gt;</span>这个时正常尺寸的公告。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"large"</span>&gt;</span>这个是大号的公告。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n  , mountNode\n)',demo:x}),z.default.createElement(C,{title:"<p>支持圆角样式</p>",src:'<span class="hljs-keyword">import</span> { Alert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span> <span class="hljs-attr">rounded</span>&gt;</span>这个公告是有圆角的。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span></span>\n  , mountNode\n)',demo:k}),z.default.createElement(C,{title:"<p>关闭按钮</p>",src:'<span class="hljs-keyword">import</span> { Alert, Sweetalert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"info"</span> <span class="hljs-attr">closable</span> &gt;</span>这个公告可以关闭。<span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span></span>\n  , mountNode\n)',demo:N}),z.default.createElement(C,{title:"<p>关闭时的回掉</p>",src:'<span class="hljs-keyword">import</span> { Alert, Sweetalert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> \n    <span class="hljs-attr">type</span>=<span class="hljs-string">"info"</span> \n    <span class="hljs-attr">closable</span>\n    <span class="hljs-attr">onClose</span>=<span class="hljs-string">{()</span> =&gt;</span> Sweetalert.alert({ content: \'公告关闭了\' })}\n  &gt;\n    这个公告关闭时有回掉函数。\n  <span class="hljs-tag">&lt;/<span class="hljs-name">Alert</span>&gt;</span></span>\n  , mountNode\n)',demo:v}),z.default.createElement(l,{html:"<h3 id=\"api\"><a href=\"#api\">¶</a>API</h3>\n<table class=\"table\">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>备选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>警告提示的样式</td>\n<td>string</td>\n<td><code>'info'</code></td>\n<td><code>'info'</code>\n, \n<code>'warning'</code>\n, \n<code>'danger'</code></td>\n</tr>\n<tr>\n<td>size</td>\n<td>alert的大小</td>\n<td>string</td>\n<td><code>'normal'</code></td>\n<td><code>'normal'</code>\n, \n<code>'large'</code></td>\n</tr>\n<tr>\n<td>rounded</td>\n<td>是否圆角</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td><code>true</code>\n, \n<code>false</code></td>\n</tr>\n<tr>\n<td>closable</td>\n<td>默认不可关闭</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td><code>true</code>\n, \n<code>false</code></td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>关闭时的回调</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>className</td>\n<td>自定义额外类名</td>\n<td>string</td>\n<td><code>''</code></td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>自定义前缀</td>\n<td>string</td>\n<td><code>'zent'</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>"}))}}]),a}(A.Component)}});