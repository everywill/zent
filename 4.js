webpackJsonp([4],{788:function(s,n,t){"use strict";function a(s){return s&&s.__esModule?s:{default:s}}function e(s){return B.default.createElement(s.tag,(0,r.default)({},s.attributes,{dangerouslySetInnerHTML:{__html:s.html}}))}function l(s){return B.default.createElement(e,{tag:"section",html:s.html})}function p(s){return B.default.createElement(e,{tag:"style",html:s.style})}var o=t(12),r=a(o),c=t(803),i=a(c),h=t(1),d=a(h),g=t(2),j=a(g),u=t(5),m=a(u),f=t(4),v=a(f),y=t(3),P=a(y),w=t(0),B=a(w),b=t(177),E=function(){return B.default.createElement("div",{className:"zent-doc-pop-container"},B.default.createElement(b.Pop,{trigger:"hover",content:"鼠标移入触发方式"},B.default.createElement(b.Button,{type:"primary"},"移入鼠标")),B.default.createElement(b.Pop,{trigger:"click",content:"鼠标点击触发方式"},B.default.createElement(b.Button,{type:"primary"},"点击鼠标")),B.default.createElement(b.Pop,{trigger:"focus",content:"获得输入焦点触发方式"},B.default.createElement(b.Input,{defaultValue:"点击获取焦点"})))}(),_=function(){return B.default.createElement("div",{className:"zent-doc-pop-positions"},B.default.createElement("div",{className:"zent-doc-pop-positions-top-row"},B.default.createElement(b.Pop,{trigger:"hover",position:"top-left",content:"Top Left"},B.default.createElement(b.Button,null,"TopLeft")),B.default.createElement(b.Pop,{trigger:"hover",position:"top-center",content:"Top Center"},B.default.createElement(b.Button,null,"TopCenter")),B.default.createElement(b.Pop,{trigger:"hover",position:"top-right",content:"Top Right"},B.default.createElement(b.Button,null,"TopRight"))),B.default.createElement("div",{className:"zent-doc-pop-positions-bottom-row"},B.default.createElement(b.Pop,{trigger:"hover",position:"bottom-left",content:"Bottom Left"},B.default.createElement(b.Button,null,"BottomLeft")),B.default.createElement(b.Pop,{trigger:"hover",position:"bottom-center",content:"Bottom Center"},B.default.createElement(b.Button,null,"BottomCenter")),B.default.createElement(b.Pop,{trigger:"hover",position:"bottom-right",content:"Bottom Right"},B.default.createElement(b.Button,null,"BottomRight"))),B.default.createElement("div",{className:"zent-doc-pop-positions-left-col"},B.default.createElement(b.Pop,{trigger:"hover",position:"left-top",content:"Left Top"},B.default.createElement(b.Button,null,"LeftTop")),B.default.createElement(b.Pop,{trigger:"hover",position:"left-center",content:"Left Center"},B.default.createElement(b.Button,null,"LeftCenter")),B.default.createElement(b.Pop,{trigger:"hover",position:"left-bottom",content:"Left Bottom"},B.default.createElement(b.Button,null,"LeftBottom"))),B.default.createElement("div",{className:"zent-doc-pop-positions-right-col"},B.default.createElement(b.Pop,{trigger:"hover",position:"right-top",content:"Right Top"},B.default.createElement(b.Button,null,"RightTop")),B.default.createElement(b.Pop,{trigger:"hover",position:"right-center",content:"Right Center"},B.default.createElement(b.Button,null,"RightCenter")),B.default.createElement(b.Pop,{trigger:"hover",position:"right-bottom",content:"Right Bottom"},B.default.createElement(b.Button,null,"RightBottom"))))}(),z=function(){return B.default.createElement("div",{className:"zent-doc-pop-container"},B.default.createElement(b.Pop,{centerArrow:!0,trigger:"hover",position:"top-left",content:"centerArrow 为 true"},B.default.createElement("span",{className:"zent-doc-pop-tag"},"Y")),B.default.createElement(b.Pop,{trigger:"hover",position:"top-left",content:"centerArrow 为 false"},B.default.createElement("span",{className:"zent-doc-pop-tag"},"N")))}(),C=function(){return B.default.createElement(b.Pop,{trigger:"click",content:"提示内容",onConfirm:function(){return b.Sweetalert.alert("Pop关闭了")}},B.default.createElement(b.Button,{type:"primary"},"打开气泡"))}(),k=function(){return B.default.createElement(b.Pop,{trigger:"click",content:"提示内容",type:"danger",confirmText:"Error",cancelText:"Close",onConfirm:function(){return b.Sweetalert.alert("Pop关闭了")}},B.default.createElement(b.Button,{type:"primary"},"打开气泡"))}(),x=function(){var s=function(s){function n(){var s,t,a,e;(0,j.default)(this,n);for(var l=arguments.length,p=Array(l),o=0;o<l;o++)p[o]=arguments[o];return t=a=(0,v.default)(this,(s=n.__proto__||(0,d.default)(n)).call.apply(s,[this].concat(p))),a.state={visible:!1},a.onBeforeShow=function(s){setTimeout(s,500)},a.onBeforeClose=function(){return new i.default(function(s){setTimeout(s,500)})},e=t,(0,v.default)(a,e)}return(0,P.default)(n,s),(0,m.default)(n,[{key:"render",value:function(){return B.default.createElement(b.Pop,{content:"延迟500ms关闭",trigger:"click",onBeforeShow:this.onBeforeShow,onBeforeClose:this.onBeforeClose},B.default.createElement(b.Button,{type:"primary"},"延迟500ms打开"))}}]),n}(w.Component);return B.default.createElement(s,null)}(),N=function(){var s=function(s){function n(){var s,t,a,e;(0,j.default)(this,n);for(var l=arguments.length,p=Array(l),o=0;o<l;o++)p[o]=arguments[o];return t=a=(0,v.default)(this,(s=n.__proto__||(0,d.default)(n)).call.apply(s,[this].concat(p))),a.state={visible:!1},a.close=function(){a.setState({visible:!1})},a.open=function(){a.setState({visible:!0})},e=t,(0,v.default)(a,e)}return(0,P.default)(n,s),(0,m.default)(n,[{key:"render",value:function(){var s=B.default.createElement("div",null,B.default.createElement("p",{style:{marginBottom:10}},"可以在 Pop 内部关闭"),B.default.createElement(b.Button,{type:"primary",onClick:this.close},"关闭"));return B.default.createElement("div",{className:"zent-doc-pop-none-trigger-container"},B.default.createElement(b.Pop,{content:s,trigger:"none",visible:this.state.visible},B.default.createElement(b.Button,{type:"primary",onClick:this.open},"打开")),B.default.createElement(b.Button,{disabled:!this.state.visible,onClick:this.close},"外部关闭"))}}]),n}(w.Component);return B.default.createElement(s,null)}(),T=function(s){function n(){var s,t,a,e;(0,j.default)(this,n);for(var l=arguments.length,p=Array(l),o=0;o<l;o++)p[o]=arguments[o];return t=a=(0,v.default)(this,(s=n.__proto__||(0,d.default)(n)).call.apply(s,[this].concat(p))),a.state={showCode:!0},a.toggle=function(){a.setState({showCode:!a.state.showCode})},e=t,(0,v.default)(a,e)}return(0,P.default)(n,s),(0,m.default)(n,[{key:"render",value:function(){var s=this.state.showCode,n=this.props,t=n.title,a=n.src,l=n.demo;return B.default.createElement("div",{className:"zandoc-react-demo"},B.default.createElement("div",{className:"zandoc-react-demo__preview"},l),B.default.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},B.default.createElement("i",{className:"zenticon zenticon-right zandoc-react-demo__toggle "+(s?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")}),B.default.createElement(e,{tag:"div",attributes:{className:"zandoc-react-demo__title"},html:t})),s&&B.default.createElement(e,{tag:"pre",html:a,attributes:{className:"zandoc-react-demo__code"}}))}}]),n}(w.Component);s.exports=function(s){function n(){return(0,j.default)(this,n),(0,v.default)(this,(n.__proto__||(0,d.default)(n)).apply(this,arguments))}return(0,P.default)(n,s),(0,m.default)(n,[{key:"render",value:function(){return B.default.createElement("div",{className:"zandoc-react-container "},B.default.createElement(p,{style:".zent-doc-pop-container .zent-pop-wrapper {\n\tmargin-right: 10px;\n}\n\n.zent-doc-pop-container .zent-doc-pop-tag {\n\tborder: 1px solid #e5e5e5;\n\tborder-radius: 20%;\n\tpadding: 3px;\n\tfont-size: 12px;\n\tcursor: default;\n}\n\n.zent-doc-pop-positions {\n\tposition: relative;\n}\n\n.zent-doc-pop-positions .zent-pop-wrapper .zent-btn {\n\twidth: 100px;\n}\n\n.zent-doc-pop-positions-top-row, .zent-doc-pop-positions-bottom-row {\n\ttext-align: center;\n}\n\n.zent-doc-pop-positions-top-row .zent-pop-wrapper:not(:last-child), .zent-doc-pop-positions-bottom-row .zent-pop-wrapper:not(:last-child) {\n\tmargin-right: 10px;\n}\n\n.zent-doc-pop-positions-bottom-row {\n\tmargin-top: 200px;\n}\n\n.zent-doc-pop-positions-left-col, .zent-doc-pop-positions-right-col {\n\tposition: absolute;\n\ttop: 0;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-pack: center;\n\t    -ms-flex-pack: center;\n\t        justify-content: center;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t    -ms-flex-direction: column;\n\t        flex-direction: column;\n\theight: 100%;\n}\n\n.zent-doc-pop-positions-left-col .zent-pop-wrapper:not(:last-child), .zent-doc-pop-positions-right-col .zent-pop-wrapper:not(:last-child) {\n\tmargin-bottom: 10px;\n}\n\n.zent-doc-pop-positions-left-col {\n\tleft: 0;\n}\n\n.zent-doc-pop-positions-right-col {\n\tright: 0;\n}\n\n.zent-doc-pop-none-trigger-container .zent-pop-wrapper {\n\tmargin-right: 10px;\n}"}),B.default.createElement(l,{html:'<h2 id="qi-pao-ti-shi- pop"><a href="#qi-pao-ti-shi-%20pop">¶</a>气泡提示 Pop</h2>\n<p>气泡提示组件</p>\n<h3 id="shi-yong-zhi-nan"><a href="#shi-yong-zhi-nan">¶</a>使用指南</h3>\n<ul>\n<li>多种触发方式：点击，鼠标移入，获得输入焦点</li>\n<li>支持 Tooltip 的使用方式</li>\n<li>支持对浮层上的元素进行操作, 可以承载相对复杂的内容, 比如链接、按钮等</li>\n</ul>\n<h3 id="dai-ma-shi-li"><a href="#dai-ma-shi-li">¶</a>代码示例</h3>'}),B.default.createElement(T,{title:"<p>三种触发方式: 点击，鼠标移入，获得输入焦点</p>",src:'<span class="hljs-keyword">import</span> { Pop, Button, Input } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-container"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">"hover"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"鼠标移入触发方式"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>移入鼠标<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">"click"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"鼠标点击触发方式"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>点击鼠标<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">"focus"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"获得输入焦点触发方式"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">defaultValue</span>=<span class="hljs-string">"点击获取焦点"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  , mountNode\n)</span>',demo:E}),B.default.createElement(T,{title:"<p>12种定位</p>",src:'<span class="hljs-keyword">import</span> { Pop, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> trigger = <span class="hljs-string">\'hover\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-positions"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-positions-top-row"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"top-left"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Top Left"</span> &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>TopLeft<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"top-center"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Top Center"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>TopCenter<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"top-right"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Top Right"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>TopRight<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-positions-bottom-row"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"bottom-left"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Bottom Left"</span> &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>BottomLeft<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"bottom-center"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Bottom Center"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>BottomCenter<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"bottom-right"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Bottom Right"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>BottomRight<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-positions-left-col"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"left-top"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Left Top"</span> &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>LeftTop<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"left-center"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Left Center"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>LeftCenter<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"left-bottom"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Left Bottom"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>LeftBottom<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-positions-right-col"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"right-top"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Right Top"</span> &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>RightTop<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"right-center"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Right Center"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>RightCenter<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">{trigger}</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"right-bottom"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"Right Bottom"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>RightBottom<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n  , mountNode\n)',demo:_}),B.default.createElement(l,{html:"<p>某些情况下<code>Pop</code> 的 trigger 特别小，但是 <code>Pop</code> 气泡的小三角距离弹层边缘的距离又是固定的，此时小三角可能会出现在 trigger 外面。<code>Pop</code> 提供了一个参数 <code>centerArrow</code> 来处理这种情况，<code>centerArrow</code> 为 <code>true</code> 的时候，气泡的小三角永远居中对齐于 trigger，不就不会出现小三角跑到外面的情况了。</p>"}),B.default.createElement(T,{title:"<p>使用 <code>centerArrow</code> 来控制气泡小三角的位置</p>",src:'<span class="hljs-keyword">import</span> { Pop, Button, Input } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-container"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">centerArrow</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">"hover"</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"top-left"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"centerArrow 为 true"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-tag"</span>&gt;</span>Y<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">"hover"</span> <span class="hljs-attr">position</span>=<span class="hljs-string">"top-left"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"centerArrow 为 false"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-tag"</span>&gt;</span>N<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n  , mountNode\n);',demo:z}),B.default.createElement(T,{title:"<p>Confirm 形式的气泡提示</p>",src:'<span class="hljs-keyword">import</span> { Pop, Sweetalert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> \n    <span class="hljs-attr">trigger</span>=<span class="hljs-string">"click"</span>\n    <span class="hljs-attr">content</span>=<span class="hljs-string">"提示内容"</span>\n    <span class="hljs-attr">onConfirm</span>=<span class="hljs-string">{()</span> =&gt;</span> Sweetalert.alert(\'Pop关闭了\')}\n  &gt;\n    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>打开气泡<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span></span>\n  , mountNode\n);',demo:C}),B.default.createElement(T,{title:"<p>自定义 Confirm 形式的气泡提示按钮</p>",src:'<span class="hljs-keyword">import</span> { Pop, Sweetalert } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Pop</span> \n    <span class="hljs-attr">trigger</span>=<span class="hljs-string">"click"</span>\n    <span class="hljs-attr">content</span>=<span class="hljs-string">"提示内容"</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">"danger"</span>\n    <span class="hljs-attr">confirmText</span>=<span class="hljs-string">"Error"</span>\n    <span class="hljs-attr">cancelText</span>=<span class="hljs-string">"Close"</span>\n    <span class="hljs-attr">onConfirm</span>=<span class="hljs-string">{()</span> =&gt;</span> Sweetalert.alert(\'Pop关闭了\')}\n  &gt;\n    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>打开气泡<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span></span>\n  , mountNode\n);',demo:k}),B.default.createElement(T,{title:"<p>延迟打开／关闭</p>",src:'<span class="hljs-keyword">import</span> { Pop } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Controlled</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>\n  };\n\n  onBeforeShow = <span class="hljs-function">(<span class="hljs-params">cont</span>) =&gt;</span> {\n    setTimeout(cont, <span class="hljs-number">500</span>);\n  };\n\n  onBeforeClose = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      setTimeout(resolve, <span class="hljs-number">500</span>);\n    });\n  };\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Pop</span>\n        <span class="hljs-attr">content</span>=<span class="hljs-string">"延迟500ms关闭"</span>\n        <span class="hljs-attr">trigger</span>=<span class="hljs-string">"click"</span>\n        <span class="hljs-attr">onBeforeShow</span>=<span class="hljs-string">{this.onBeforeShow}</span>\n        <span class="hljs-attr">onBeforeClose</span>=<span class="hljs-string">{this.onBeforeClose}</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>延迟500ms打开<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span></span>\n    \t);\n  }\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Controlled</span> /&gt;</span>\n  , mountNode\n);</span>',demo:x}),B.default.createElement(l,{html:'<p>有时候需要对 <code>Pop</code> 的打开关闭拥有完全控制权，可以通过设置 <code>visible</code> 和 <code>onVisibleChange</code> 来实现。</p>\n<p><strong>注意：</strong>\n除了 <code>trigger="none"</code>以外，<code>visible</code> 必须和 <code>onVisibleChange</code> 一起传。原因是其它 trigger 的情况下\n除了外部代码控制 <code>Pop</code> 的显示外，trigger 在条件满足的情况下也会触发打开／关闭，这时候必须通知外部修改 <code>visible</code>。</p>'}),B.default.createElement(T,{title:"<p>高级用法：外部控制显示隐藏</p>",src:'<span class="hljs-keyword">import</span> { Pop } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NoneTriggerDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  state = {\n    <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>\n  };\n\n  close = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>\n    });\n  };\n\n  open = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">visible</span>: <span class="hljs-literal">true</span>\n    });\n  };\n\n  render() {\n  <span class="hljs-keyword">const</span> content = (\n    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">marginBottom:</span> <span class="hljs-attr">10</span> }}&gt;</span>可以在 Pop 内部关闭<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.close}</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n  );\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"zent-doc-pop-none-trigger-container"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Pop</span>\n          <span class="hljs-attr">content</span>=<span class="hljs-string">{content}</span>\n          <span class="hljs-attr">trigger</span>=<span class="hljs-string">"none"</span>\n          <span class="hljs-attr">visible</span>=<span class="hljs-string">{this.state.visible}</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.open}</span>&gt;</span>打开<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Pop</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">disabled</span>=<span class="hljs-string">{!this.state.visible}</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.close}</span>&gt;</span>外部关闭<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>\n    );\n  }\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">NoneTriggerDemo</span> /&gt;</span>\n  , mountNode\n)</span>',demo:N}),B.default.createElement(l,{html:'<h3 id="api"><a href="#api">¶</a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>备选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>content</td>\n<td>弹层的内容</td>\n<td>node</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>trigger</td>\n<td>可选，触发方式</td>\n<td>string</td>\n<td><code>\'none\'</code></td>\n<td><code>\'click\'</code>\n, \n<code>\'hover\'</code>\n, \n<code>\'focus\'</code></td>\n</tr>\n<tr>\n<td>position</td>\n<td>可选，弹出框的位置，命名规则：相对触发元素的位置+箭头相对于Pop的位置</td>\n<td>string</td>\n<td><code>\'top-center\'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>centerArrow</td>\n<td>可选，是否按小箭头居中对齐trigger来定位</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>可选，用户可以自定义头部</td>\n<td>node</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>block</td>\n<td>可选，弹层在文档流里是否以块级元素出现</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onShow</td>\n<td>可选，弹层打开后的回调函数</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>可选，弹层关闭后的回调函数</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onBeforeShow</td>\n<td>可选，弹层打开前的回调函数，只有用户触发的打开操作才会调用，外部设置\n<code>visible</code>\n不会调用</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onBeforeClose</td>\n<td>可选，弹层关闭后的回调函数, 只有用户触发的关闭操作才会调用，外部设置\n<code>visible</code>\n不会调用</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>可选，用户自定义回调，设置以后pop 表现为confirm</td>\n<td>func</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>可选，用户使用 confirm 的时候可自定义取消的回调</td>\n<td>func</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmText</td>\n<td>可选，用户自定义按钮名</td>\n<td>string</td>\n<td><code>\'确定\'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>可选，用户自定义取消按钮</td>\n<td>string</td>\n<td><code>\'取消\'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>可选，影响确定按钮的样式</td>\n<td>string</td>\n<td><code>\'primary\'</code></td>\n<td><code>\'default\'</code>\n, \n<code>\'danger\'</code>\n, \n<code>\'success\'</code></td>\n</tr>\n<tr>\n<td>visible</td>\n<td>可选，外部维护 \n<code>Pop</code>\n 的显示状态，此时外部拥有 \n<code>Pop</code>\n 的全部控制权，必须和 \n<code>onVisibleChange</code>\n 一起使用</td>\n<td>bool</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onVisibleChange</td>\n<td>可选，和 \n<code>visible</code>\n 一起使用</td>\n<td>func</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>className</td>\n<td>可选，自定义类名</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>wrapperClassName</td>\n<td>可选，自定义trigger包裹节点的类名</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>可选，自定义前缀</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>根据trigger值的不同, Pop 提供了一些额外的控制参数.</p>\n<h4 id="click"><a href="#click">¶</a>Click</h4>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>closeOnClickOutside</td>\n<td>点击弹层和trigger节点外部时自动关闭</td>\n<td>bool</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>isOutside</td>\n<td>用来判断点击目标是否在外面的可选函数</td>\n<td>func</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id="hover"><a href="#hover">¶</a>Hover</h4>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mouseEnterDelay</td>\n<td>hover打开的延迟（单位：毫秒）</td>\n<td>number</td>\n<td><code>200</code></td>\n</tr>\n<tr>\n<td>mouseLeaveDelay</td>\n<td>关闭的的延迟（单位：毫秒）</td>\n<td>number</td>\n<td><code>200</code></td>\n</tr>\n<tr>\n<td>isOutside</td>\n<td>用来判断点击目标是否在外面的可选函数</td>\n<td>func</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id="none"><a href="#none">¶</a>None</h4>\n<p>这种模式下 <code>onConfirm</code> 和 <code>onCancel</code> 不会自动关闭Pop, 需要使用者自己在回调中控制 <code>visible</code> 来关闭Pop.</p>\n<h3 id="faq"><a href="#faq">¶</a>FAQ</h3>\n<h4 id="centerarrow"><a href="#centerarrow">¶</a>centerArrow</h4>\n<p>默认情况下, <code>Pop</code> 根据 <code>position</code> 对齐的是弹层和trigger的边缘, 除了 <code>postion</code> 为 <code>\'*-center\'</code> 的情况下, 弹层上的小箭头和弹层边缘的间距是固定的, 因而在 trigger 特别小的情况下箭头会对齐到 trigger 外部. 这种情况下可以设置 <code>centerArrow</code> 为 <code>true</code>, 不管trigger大小如何, 箭头永远对齐在trigger中间, 弹层再相对箭头做定位.</p>\n<h4 id="onconfirm -he- oncancel"><a href="#onconfirm%20-he-%20oncancel">¶</a>onConfirm 和 onCancel</h4>\n<p>支持异步响应，此时按钮会变成loading状态。</p>\n<ul>\n<li>如果返回 <code>Promise</code>, <code>Pop</code> 会在 <code>Promise</code> <code>resolve</code> 后关闭.</li>\n<li>也支持参数形式的异步响应, 此时接受一个参数 <code>close</code>, 需要在函数内手动调用 <code>close</code> 函数.</li>\n</ul>'}))}}]),n}(w.Component)},802:function(s,n,t){var a,e,l,p=t(116),o=t(807),r=t(309),c=t(178),i=t(36),h=i.process,d=i.setImmediate,g=i.clearImmediate,j=i.MessageChannel,u=0,m={},f=function(){var s=+this;if(m.hasOwnProperty(s)){var n=m[s];delete m[s],n()}},v=function(s){f.call(s.data)};d&&g||(d=function(s){for(var n=[],t=1;arguments.length>t;)n.push(arguments[t++]);return m[++u]=function(){o("function"==typeof s?s:Function(s),n)},a(u),u},g=function(s){delete m[s]},"process"==t(117)(h)?a=function(s){h.nextTick(p(f,s,1))}:j?(e=new j,l=e.port2,e.port1.onmessage=v,a=p(l.postMessage,l,1)):i.addEventListener&&"function"==typeof postMessage&&!i.importScripts?(a=function(s){i.postMessage(s+"","*")},i.addEventListener("message",v,!1)):a="onreadystatechange"in c("script")?function(s){r.appendChild(c("script")).onreadystatechange=function(){r.removeChild(this),f.call(s)}}:function(s){setTimeout(p(f,s,1),0)}),s.exports={set:d,clear:g}},803:function(s,n,t){s.exports={default:t(804),__esModule:!0}},804:function(s,n,t){t(314),t(180),t(315),t(812),s.exports=t(24).Promise},805:function(s,n){s.exports=function(s,n,t,a){if(!(s instanceof n)||void 0!==a&&a in s)throw TypeError(t+": incorrect invocation!");return s}},806:function(s,n,t){var a=t(116),e=t(311),l=t(310),p=t(58),o=t(179),r=t(313),c={},i={},n=s.exports=function(s,n,t,h,d){var g,j,u,m,f=d?function(){return s}:r(s),v=a(t,h,n?2:1),y=0;if("function"!=typeof f)throw TypeError(s+" is not iterable!");if(l(f)){for(g=o(s.length);g>y;y++)if((m=n?v(p(j=s[y])[0],j[1]):v(s[y]))===c||m===i)return m}else for(u=f.call(s);!(j=u.next()).done;)if((m=e(u,v,j.value,n))===c||m===i)return m};n.BREAK=c,n.RETURN=i},807:function(s,n){s.exports=function(s,n,t){var a=void 0===t;switch(n.length){case 0:return a?s():s.call(t);case 1:return a?s(n[0]):s.call(t,n[0]);case 2:return a?s(n[0],n[1]):s.call(t,n[0],n[1]);case 3:return a?s(n[0],n[1],n[2]):s.call(t,n[0],n[1],n[2]);case 4:return a?s(n[0],n[1],n[2],n[3]):s.call(t,n[0],n[1],n[2],n[3])}return s.apply(t,n)}},808:function(s,n,t){var a=t(36),e=t(802).set,l=a.MutationObserver||a.WebKitMutationObserver,p=a.process,o=a.Promise,r="process"==t(117)(p);s.exports=function(){var s,n,t,c=function(){var a,e;for(r&&(a=p.domain)&&a.exit();s;){e=s.fn,s=s.next;try{e()}catch(a){throw s?t():n=void 0,a}}n=void 0,a&&a.enter()};if(r)t=function(){p.nextTick(c)};else if(l){var i=!0,h=document.createTextNode("");new l(c).observe(h,{characterData:!0}),t=function(){h.data=i=!i}}else if(o&&o.resolve){var d=o.resolve();t=function(){d.then(c)}}else t=function(){e.call(a,c)};return function(a){var e={fn:a,next:void 0};n&&(n.next=e),s||(s=e,t()),n=e}}},809:function(s,n,t){var a=t(59);s.exports=function(s,n,t){for(var e in n)t&&s[e]?s[e]=n[e]:a(s,e,n[e]);return s}},810:function(s,n,t){"use strict";var a=t(36),e=t(24),l=t(38),p=t(46),o=t(30)("species");s.exports=function(s){var n="function"==typeof e[s]?e[s]:a[s];p&&n&&!n[o]&&l.f(n,o,{configurable:!0,get:function(){return this}})}},811:function(s,n,t){var a=t(58),e=t(307),l=t(30)("species");s.exports=function(s,n){var t,p=a(s).constructor;return void 0===p||void 0==(t=a(p)[l])?n:e(t)}},812:function(s,n,t){"use strict";var a,e,l,p=t(118),o=t(36),r=t(116),c=t(308),i=t(37),h=t(73),d=t(307),g=t(805),j=t(806),u=t(811),m=t(802).set,f=t(808)(),v=o.TypeError,y=o.process,P=o.Promise,y=o.process,w="process"==c(y),B=function(){},b=!!function(){try{var s=P.resolve(1),n=(s.constructor={})[t(30)("species")]=function(s){s(B,B)};return(w||"function"==typeof PromiseRejectionEvent)&&s.then(B)instanceof n}catch(s){}}(),E=function(s,n){return s===n||s===P&&n===l},_=function(s){var n;return!(!h(s)||"function"!=typeof(n=s.then))&&n},z=function(s){return E(P,s)?new C(s):new e(s)},C=e=function(s){var n,t;this.promise=new s(function(s,a){if(void 0!==n||void 0!==t)throw v("Bad Promise constructor");n=s,t=a}),this.resolve=d(n),this.reject=d(t)},k=function(s){try{s()}catch(s){return{error:s}}},x=function(s,n){if(!s._n){s._n=!0;var t=s._c;f(function(){for(var a=s._v,e=1==s._s,l=0;t.length>l;)!function(n){var t,l,p=e?n.ok:n.fail,o=n.resolve,r=n.reject,c=n.domain;try{p?(e||(2==s._h&&R(s),s._h=1),p===!0?t=a:(c&&c.enter(),t=p(a),c&&c.exit()),t===n.promise?r(v("Promise-chain cycle")):(l=_(t))?l.call(t,o,r):o(t)):r(a)}catch(s){r(s)}}(t[l++]);s._c=[],s._n=!1,n&&!s._h&&N(s)})}},N=function(s){m.call(o,function(){var n,t,a,e=s._v;if(T(s)&&(n=k(function(){w?y.emit("unhandledRejection",e,s):(t=o.onunhandledrejection)?t({promise:s,reason:e}):(a=o.console)&&a.error&&a.error("Unhandled promise rejection",e)}),s._h=w||T(s)?2:1),s._a=void 0,n)throw n.error})},T=function(s){if(1==s._h)return!1;for(var n,t=s._a||s._c,a=0;t.length>a;)if(n=t[a++],n.fail||!T(n.promise))return!1;return!0},R=function(s){m.call(o,function(){var n;w?y.emit("rejectionHandled",s):(n=o.onrejectionhandled)&&n({promise:s,reason:s._v})})},L=function(s){var n=this;n._d||(n._d=!0,n=n._w||n,n._v=s,n._s=2,n._a||(n._a=n._c.slice()),x(n,!0))},S=function(s){var n,t=this;if(!t._d){t._d=!0,t=t._w||t;try{if(t===s)throw v("Promise can't be resolved itself");(n=_(s))?f(function(){var a={_w:t,_d:!1};try{n.call(s,r(S,a,1),r(L,a,1))}catch(s){L.call(a,s)}}):(t._v=s,t._s=1,x(t,!1))}catch(s){L.call({_w:t,_d:!1},s)}}};b||(P=function(s){g(this,P,"Promise","_h"),d(s),a.call(this);try{s(r(S,this,1),r(L,this,1))}catch(s){L.call(this,s)}},a=function(s){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},a.prototype=t(809)(P.prototype,{then:function(s,n){var t=z(u(this,P));return t.ok="function"!=typeof s||s,t.fail="function"==typeof n&&n,t.domain=w?y.domain:void 0,this._c.push(t),this._a&&this._a.push(t),this._s&&x(this,!1),t.promise},catch:function(s){return this.then(void 0,s)}}),C=function(){var s=new a;this.promise=s,this.resolve=r(S,s,1),this.reject=r(L,s,1)}),i(i.G+i.W+i.F*!b,{Promise:P}),t(119)(P,"Promise"),t(810)("Promise"),l=t(24).Promise,i(i.S+i.F*!b,"Promise",{reject:function(s){var n=z(this);return(0,n.reject)(s),n.promise}}),i(i.S+i.F*(p||!b),"Promise",{resolve:function(s){if(s instanceof P&&E(s.constructor,this))return s;var n=z(this);return(0,n.resolve)(s),n.promise}}),i(i.S+i.F*!(b&&t(312)(function(s){P.all(s).catch(B)})),"Promise",{all:function(s){var n=this,t=z(n),a=t.resolve,e=t.reject,l=k(function(){var t=[],l=0,p=1;j(s,!1,function(s){var o=l++,r=!1;t.push(void 0),p++,n.resolve(s).then(function(s){r||(r=!0,t[o]=s,--p||a(t))},e)}),--p||a(t)});return l&&e(l.error),t.promise},race:function(s){var n=this,t=z(n),a=t.reject,e=k(function(){j(s,!1,function(s){n.resolve(s).then(t.resolve,a)})});return e&&a(e.error),t.promise}})}});