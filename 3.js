webpackJsonp([3],{794:function(n,t,s){"use strict";function e(n){return n&&n.__esModule?n:{default:n}}function a(n){return C.default.createElement(n.tag,(0,v.default)({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function r(n){return C.default.createElement(a,{tag:"section",html:n.html})}function o(n){return C.default.createElement(a,{tag:"style",html:n.style})}var l=s(1),c=e(l),i=s(2),d=e(i),p=s(5),h=e(p),u=s(4),f=e(u),m=s(3),j=e(m),g=s(12),v=e(g),w=s(803),y=e(w),_=s(0),C=e(_),k=s(177),x=function(){var n=function(){k.Sweetalert.alert({content:"这个是具体内容",title:"这是一个消息标题"})};return C.default.createElement(k.Button,{onClick:n},"消息对话框")}(),E=function(){var n=function(){console.log("我真的知道了")},t=function(){console.log("我真的取消了")},s=function(){k.Sweetalert.confirm({content:C.default.createElement("p",null,"这个是内容"),onConfirm:n,onCancel:t})};return C.default.createElement(k.Button,{onClick:s},"确认对话框")}(),S=function(){var n=function(){var n=k.Sweetalert.confirm({content:C.default.createElement("p",null,"一秒后自动关闭")});setTimeout(n,1e3)};return C.default.createElement(k.Button,{onClick:n},"自动关闭对话框")}(),b=function(){var n=function(){k.Sweetalert.confirm({content:"点击确认按钮，按钮会变成loading状态，三秒后关闭",title:"onConfirm返回Promise",onConfirm:function(){return new y.default(function(n){setTimeout(function(){n()},3e3)})}})};return C.default.createElement(k.Button,{onClick:n},"自动关闭对话框(Promise)")}(),B=function(){var n=function(){k.Sweetalert.alert({type:"info",content:"这个是具体内容",title:"这是一个消息标题"})};return C.default.createElement(k.Button,{onClick:n},"含有图标消息对话框")}(),P=function(){var n=function(){k.Sweetalert.confirm({confirmType:"danger",confirmText:"删除",content:"确认删除吗？",title:"确认"})};return C.default.createElement(k.Button,{onClick:n,type:"danger"},"删除")}(),T=function(n){function t(){var n,s,e,a;(0,d.default)(this,t);for(var r=arguments.length,o=Array(r),l=0;l<r;l++)o[l]=arguments[l];return s=e=(0,f.default)(this,(n=t.__proto__||(0,c.default)(t)).call.apply(n,[this].concat(o))),e.state={showCode:!0},e.toggle=function(){e.setState({showCode:!e.state.showCode})},a=s,(0,f.default)(e,a)}return(0,j.default)(t,n),(0,h.default)(t,[{key:"render",value:function(){var n=this.state.showCode,t=this.props,s=t.title,e=t.src,r=t.demo;return C.default.createElement("div",{className:"zandoc-react-demo"},C.default.createElement("div",{className:"zandoc-react-demo__preview"},r),C.default.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},C.default.createElement("i",{className:"zenticon zenticon-right zandoc-react-demo__toggle "+(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")}),C.default.createElement(a,{tag:"div",attributes:{className:"zandoc-react-demo__title"},html:s})),n&&C.default.createElement(a,{tag:"pre",html:e,attributes:{className:"zandoc-react-demo__code"}}))}}]),t}(_.Component);n.exports=function(n){function t(){return(0,d.default)(this,t),(0,f.default)(this,(t.__proto__||(0,c.default)(t)).apply(this,arguments))}return(0,j.default)(t,n),(0,h.default)(t,[{key:"render",value:function(){return C.default.createElement("div",{className:"zandoc-react-container "},C.default.createElement(o,{style:""}),C.default.createElement(r,{html:'<h2 id="sweetalert"><a href="#sweetalert">¶</a>Sweetalert</h2>\n<p>快速唤起 Dialog 组件</p>\n<h3 id="shi-yong-zhi-nan"><a href="#shi-yong-zhi-nan">¶</a>使用指南</h3>\n<ul>\n<li>组件不提供个性化选项，如有需要请使用 Dialog 组件。</li>\n</ul>\n<h3 id="dai-ma-yan-shi"><a href="#dai-ma-yan-shi">¶</a>代码演示</h3>'}),C.default.createElement(T,{title:"<p>基础用法</p>",src:'<span class="hljs-keyword">import</span> { Sweetalert, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> showAlertInfo = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  Sweetalert.alert({\n    <span class="hljs-attr">content</span>: <span class="hljs-string">\'这个是具体内容\'</span>,\n    <span class="hljs-attr">title</span>: <span class="hljs-string">\'这是一个消息标题\'</span>\n  });\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{showAlertInfo}</span>&gt;</span>消息对话框<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,\n  mountNode\n);',demo:x}),C.default.createElement(T,{title:"<p>含有确认按钮与取消按钮的 SweetAlert</p>",src:'<span class="hljs-keyword">import</span> { Sweetalert, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> onConfirm = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'我真的知道了\'</span>);\n}\n\n<span class="hljs-keyword">const</span> onCancel = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'我真的取消了\'</span>);\n}\n\n<span class="hljs-keyword">const</span> showAlertConfirm = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  Sweetalert.confirm({\n    <span class="hljs-attr">content</span>: <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这个是内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span>,\n    <span class="hljs-attr">onConfirm</span>: onConfirm,\n    <span class="hljs-attr">onCancel</span>: onCancel,\n  });\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{showAlertConfirm}</span>&gt;</span>确认对话框<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,\n  mountNode\n);',demo:E}),C.default.createElement(T,{title:"<p>通过代码自动关闭对话框</p>",src:'<span class="hljs-keyword">import</span> { Sweetalert, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> autoCloseConfirm = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  <span class="hljs-keyword">const</span> close = Sweetalert.confirm({\n    <span class="hljs-attr">content</span>: <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>一秒后自动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span>\n  });\n\n  setTimeout(close, <span class="hljs-number">1000</span>);\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{autoCloseConfirm}</span>&gt;</span>自动关闭对话框<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,\n  mountNode\n);',demo:S}),C.default.createElement(T,{title:"<p>可以自动关闭的对话框（Promise）点击确认按钮，按钮会变成loading状态，三秒后关闭</p>",src:'<span class="hljs-keyword">import</span> { Sweetalert, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> promiseConfirm = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  Sweetalert.confirm({\n    <span class="hljs-attr">content</span>: <span class="hljs-string">\'点击确认按钮，按钮会变成loading状态，三秒后关闭\'</span>,\n    <span class="hljs-attr">title</span>: <span class="hljs-string">\'onConfirm返回Promise\'</span>,\n    <span class="hljs-attr">onConfirm</span>: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n        resolve();\n      }, <span class="hljs-number">3000</span>);\n    })\n  });\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{promiseConfirm}</span>&gt;</span>自动关闭对话框(Promise)<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,\n  mountNode\n);',demo:b}),C.default.createElement(T,{title:"<p>含有图标的 SweetAlert</p>",src:'<span class="hljs-keyword">import</span> { Sweetalert, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> showAlertInfo = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  Sweetalert.alert({\n    <span class="hljs-attr">type</span>: <span class="hljs-string">\'info\'</span>,\n    <span class="hljs-attr">content</span>: <span class="hljs-string">\'这个是具体内容\'</span>,\n    <span class="hljs-attr">title</span>: <span class="hljs-string">\'这是一个消息标题\'</span>\n  });\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{showAlertInfo}</span>&gt;</span>含有图标消息对话框<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,\n  mountNode\n);',demo:B}),C.default.createElement(T,{title:"<p>确认按钮类型</p>",src:'<span class="hljs-keyword">import</span> { Sweetalert, Button } <span class="hljs-keyword">from</span> <span class="hljs-string">\'zent\'</span>;\n\n<span class="hljs-keyword">const</span> showAlertInfo = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n  Sweetalert.confirm({\n    <span class="hljs-attr">confirmType</span>: <span class="hljs-string">\'danger\'</span>,\n    <span class="hljs-attr">confirmText</span>: <span class="hljs-string">\'删除\'</span>,\n    <span class="hljs-attr">content</span>: <span class="hljs-string">\'确认删除吗？\'</span>,\n    <span class="hljs-attr">title</span>: <span class="hljs-string">\'确认\'</span>\n  });\n}\n\nReactDOM.render(\n  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{showAlertInfo}</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"danger"</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>,\n  mountNode\n);',demo:P}),C.default.createElement(r,{html:"<h3 id=\"api\"><a href=\"#api\">¶</a>API</h3>\n<h4 id=\"alert\"><a href=\"#alert\">¶</a>alert</h4>\n<table class=\"table\">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>备选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>content</td>\n<td>弹窗中的内容</td>\n<td>node</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>弹窗的类型, 设置会在title左边显示一个小图标, 不传不会显示图标</td>\n<td>string</td>\n<td>-</td>\n<td><code>'info'</code>\n, \n<code>'success'</code>\n, \n<code>'error'</code>\n, \n<code>'warning'</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>弹窗的标题</td>\n<td>node</td>\n<td><code>''</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>确认操作回调函数</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td><code>'取消'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmType</td>\n<td>确认按钮的类型</td>\n<td>string</td>\n<td><code>'primary'</code></td>\n<td><code>'default'</code>\n、\n<code>'primary'</code>\n、\n<code>'danger'</code>\n、\n<code>'success'</code></td>\n</tr>\n<tr>\n<td>className</td>\n<td>额外的className</td>\n<td>string</td>\n<td><code>''</code></td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>默认className的前缀</td>\n<td>string</td>\n<td><code>'zent'</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"confirm\"><a href=\"#confirm\">¶</a>confirm</h4>\n<table class=\"table\">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>备选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>content</td>\n<td>弹窗中的内容</td>\n<td>node</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>弹窗的类型, 设置会在title左边显示一个小图标, 不传不会显示图标</td>\n<td>string</td>\n<td>-</td>\n<td><code>'info'</code>\n, \n<code>'success'</code>\n, \n<code>'error'</code>\n, \n<code>'warning'</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>弹窗的标题</td>\n<td>node</td>\n<td><code>''</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>取消操作回调函数</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>确认操作回调函数</td>\n<td>func</td>\n<td><code>noop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td><code>'取消'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td><code>'确认'</code></td>\n<td></td>\n</tr>\n<tr>\n<td>confirmType</td>\n<td>确认按钮的类型</td>\n<td>string</td>\n<td><code>'primary'</code></td>\n<td><code>'default'</code>\n、\n<code>'primary'</code>\n、\n<code>'danger'</code>\n、\n<code>'success'</code></td>\n</tr>\n<tr>\n<td>className</td>\n<td>额外的className</td>\n<td>string</td>\n<td><code>''</code></td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>默认className的前缀</td>\n<td>string</td>\n<td><code>'zent'</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><code>Sweetalert.alert</code> 和 <code>Sweetalert.confirm</code> 的返回值是可以用来手动关闭对话框的函数。</li>\n<li>如果 <code>onConfirm</code> 的返回值是 <code>Promise</code>, 对应的按钮会在 <code>Promise</code> pending 时保持在 loading 状态。</li>\n</ul>"}))}}]),t}(_.Component)},802:function(n,t,s){var e,a,r,o=s(116),l=s(807),c=s(309),i=s(178),d=s(36),p=d.process,h=d.setImmediate,u=d.clearImmediate,f=d.MessageChannel,m=0,j={},g=function(){var n=+this;if(j.hasOwnProperty(n)){var t=j[n];delete j[n],t()}},v=function(n){g.call(n.data)};h&&u||(h=function(n){for(var t=[],s=1;arguments.length>s;)t.push(arguments[s++]);return j[++m]=function(){l("function"==typeof n?n:Function(n),t)},e(m),m},u=function(n){delete j[n]},"process"==s(117)(p)?e=function(n){p.nextTick(o(g,n,1))}:f?(a=new f,r=a.port2,a.port1.onmessage=v,e=o(r.postMessage,r,1)):d.addEventListener&&"function"==typeof postMessage&&!d.importScripts?(e=function(n){d.postMessage(n+"","*")},d.addEventListener("message",v,!1)):e="onreadystatechange"in i("script")?function(n){c.appendChild(i("script")).onreadystatechange=function(){c.removeChild(this),g.call(n)}}:function(n){setTimeout(o(g,n,1),0)}),n.exports={set:h,clear:u}},803:function(n,t,s){n.exports={default:s(804),__esModule:!0}},804:function(n,t,s){s(314),s(180),s(315),s(812),n.exports=s(24).Promise},805:function(n,t){n.exports=function(n,t,s,e){if(!(n instanceof t)||void 0!==e&&e in n)throw TypeError(s+": incorrect invocation!");return n}},806:function(n,t,s){var e=s(116),a=s(311),r=s(310),o=s(58),l=s(179),c=s(313),i={},d={},t=n.exports=function(n,t,s,p,h){var u,f,m,j,g=h?function(){return n}:c(n),v=e(s,p,t?2:1),w=0;if("function"!=typeof g)throw TypeError(n+" is not iterable!");if(r(g)){for(u=l(n.length);u>w;w++)if((j=t?v(o(f=n[w])[0],f[1]):v(n[w]))===i||j===d)return j}else for(m=g.call(n);!(f=m.next()).done;)if((j=a(m,v,f.value,t))===i||j===d)return j};t.BREAK=i,t.RETURN=d},807:function(n,t){n.exports=function(n,t,s){var e=void 0===s;switch(t.length){case 0:return e?n():n.call(s);case 1:return e?n(t[0]):n.call(s,t[0]);case 2:return e?n(t[0],t[1]):n.call(s,t[0],t[1]);case 3:return e?n(t[0],t[1],t[2]):n.call(s,t[0],t[1],t[2]);case 4:return e?n(t[0],t[1],t[2],t[3]):n.call(s,t[0],t[1],t[2],t[3])}return n.apply(s,t)}},808:function(n,t,s){var e=s(36),a=s(802).set,r=e.MutationObserver||e.WebKitMutationObserver,o=e.process,l=e.Promise,c="process"==s(117)(o);n.exports=function(){var n,t,s,i=function(){var e,a;for(c&&(e=o.domain)&&e.exit();n;){a=n.fn,n=n.next;try{a()}catch(e){throw n?s():t=void 0,e}}t=void 0,e&&e.enter()};if(c)s=function(){o.nextTick(i)};else if(r){var d=!0,p=document.createTextNode("");new r(i).observe(p,{characterData:!0}),s=function(){p.data=d=!d}}else if(l&&l.resolve){var h=l.resolve();s=function(){h.then(i)}}else s=function(){a.call(e,i)};return function(e){var a={fn:e,next:void 0};t&&(t.next=a),n||(n=a,s()),t=a}}},809:function(n,t,s){var e=s(59);n.exports=function(n,t,s){for(var a in t)s&&n[a]?n[a]=t[a]:e(n,a,t[a]);return n}},810:function(n,t,s){"use strict";var e=s(36),a=s(24),r=s(38),o=s(46),l=s(30)("species");n.exports=function(n){var t="function"==typeof a[n]?a[n]:e[n];o&&t&&!t[l]&&r.f(t,l,{configurable:!0,get:function(){return this}})}},811:function(n,t,s){var e=s(58),a=s(307),r=s(30)("species");n.exports=function(n,t){var s,o=e(n).constructor;return void 0===o||void 0==(s=e(o)[r])?t:a(s)}},812:function(n,t,s){"use strict";var e,a,r,o=s(118),l=s(36),c=s(116),i=s(308),d=s(37),p=s(73),h=s(307),u=s(805),f=s(806),m=s(811),j=s(802).set,g=s(808)(),v=l.TypeError,w=l.process,y=l.Promise,w=l.process,_="process"==i(w),C=function(){},k=!!function(){try{var n=y.resolve(1),t=(n.constructor={})[s(30)("species")]=function(n){n(C,C)};return(_||"function"==typeof PromiseRejectionEvent)&&n.then(C)instanceof t}catch(n){}}(),x=function(n,t){return n===t||n===y&&t===r},E=function(n){var t;return!(!p(n)||"function"!=typeof(t=n.then))&&t},S=function(n){return x(y,n)?new b(n):new a(n)},b=a=function(n){var t,s;this.promise=new n(function(n,e){if(void 0!==t||void 0!==s)throw v("Bad Promise constructor");t=n,s=e}),this.resolve=h(t),this.reject=h(s)},B=function(n){try{n()}catch(n){return{error:n}}},P=function(n,t){if(!n._n){n._n=!0;var s=n._c;g(function(){for(var e=n._v,a=1==n._s,r=0;s.length>r;)!function(t){var s,r,o=a?t.ok:t.fail,l=t.resolve,c=t.reject,i=t.domain;try{o?(a||(2==n._h&&N(n),n._h=1),o===!0?s=e:(i&&i.enter(),s=o(e),i&&i.exit()),s===t.promise?c(v("Promise-chain cycle")):(r=E(s))?r.call(s,l,c):l(s)):c(e)}catch(n){c(n)}}(s[r++]);n._c=[],n._n=!1,t&&!n._h&&T(n)})}},T=function(n){j.call(l,function(){var t,s,e,a=n._v;if(z(n)&&(t=B(function(){_?w.emit("unhandledRejection",a,n):(s=l.onunhandledrejection)?s({promise:n,reason:a}):(e=l.console)&&e.error&&e.error("Unhandled promise rejection",a)}),n._h=_||z(n)?2:1),n._a=void 0,t)throw t.error})},z=function(n){if(1==n._h)return!1;for(var t,s=n._a||n._c,e=0;s.length>e;)if(t=s[e++],t.fail||!z(t.promise))return!1;return!0},N=function(n){j.call(l,function(){var t;_?w.emit("rejectionHandled",n):(t=l.onrejectionhandled)&&t({promise:n,reason:n._v})})},M=function(n){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=n,t._s=2,t._a||(t._a=t._c.slice()),P(t,!0))},A=function(n){var t,s=this;if(!s._d){s._d=!0,s=s._w||s;try{if(s===n)throw v("Promise can't be resolved itself");(t=E(n))?g(function(){var e={_w:s,_d:!1};try{t.call(n,c(A,e,1),c(M,e,1))}catch(n){M.call(e,n)}}):(s._v=n,s._s=1,P(s,!1))}catch(n){M.call({_w:s,_d:!1},n)}}};k||(y=function(n){u(this,y,"Promise","_h"),h(n),e.call(this);try{n(c(A,this,1),c(M,this,1))}catch(n){M.call(this,n)}},e=function(n){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},e.prototype=s(809)(y.prototype,{then:function(n,t){var s=S(m(this,y));return s.ok="function"!=typeof n||n,s.fail="function"==typeof t&&t,s.domain=_?w.domain:void 0,this._c.push(s),this._a&&this._a.push(s),this._s&&P(this,!1),s.promise},catch:function(n){return this.then(void 0,n)}}),b=function(){var n=new e;this.promise=n,this.resolve=c(A,n,1),this.reject=c(M,n,1)}),d(d.G+d.W+d.F*!k,{Promise:y}),s(119)(y,"Promise"),s(810)("Promise"),r=s(24).Promise,d(d.S+d.F*!k,"Promise",{reject:function(n){var t=S(this);return(0,t.reject)(n),t.promise}}),d(d.S+d.F*(o||!k),"Promise",{resolve:function(n){if(n instanceof y&&x(n.constructor,this))return n;var t=S(this);return(0,t.resolve)(n),t.promise}}),d(d.S+d.F*!(k&&s(312)(function(n){y.all(n).catch(C)})),"Promise",{all:function(n){var t=this,s=S(t),e=s.resolve,a=s.reject,r=B(function(){var s=[],r=0,o=1;f(n,!1,function(n){var l=r++,c=!1;s.push(void 0),o++,t.resolve(n).then(function(n){c||(c=!0,s[l]=n,--o||e(s))},a)}),--o||e(s)});return r&&a(r.error),s.promise},race:function(n){var t=this,s=S(t),e=s.reject,a=B(function(){f(n,!1,function(n){t.resolve(n).then(s.resolve,e)})});return a&&e(a.error),s.promise}})}});